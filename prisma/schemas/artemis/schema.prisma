generator client {
  provider = "prisma-client-js"
  output   = "./generated/artemis"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_AIME_URL")
}

model aime_card {
  id              Int       @id @default(autoincrement())
  user            Int
  access_code     String    @unique(map: "access_code") @db.VarChar(20)
  created_date    DateTime? @default(now()) @db.Timestamp(0)
  last_login_date DateTime? @db.Timestamp(0)
  is_locked       Boolean?  @default(false)
  is_banned       Boolean?  @default(false)
  idm             String?   @unique(map: "idm") @db.VarChar(16)
  chip_id         BigInt?   @unique(map: "chip_id")
  memo            String?   @db.VarChar(16)
  aime_user       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "aime_card_ibfk_1")

  @@unique([user, access_code], map: "aime_card_uk")
}

model aime_user {
  id                                                               Int                                  @id @default(autoincrement())
  username                                                         String?                              @unique(map: "username") @db.VarChar(25)
  email                                                            String?                              @unique(map: "email") @db.VarChar(255)
  password                                                         String?                              @db.VarChar(255)
  permissions                                                      Int?
  created_date                                                     DateTime?                            @default(now()) @db.Timestamp(0)
  last_login_date                                                  DateTime?                            @db.Timestamp(0)
  suspend_expire_time                                              DateTime?                            @db.Timestamp(0)
  aime_card                                                        aime_card[]
  aime_user_game_locks                                             aime_user_game_locks[]
  arcade_owner                                                     arcade_owner[]
  chuni_item_character                                             chuni_item_character[]
  chuni_item_cmission                                              chuni_item_cmission[]
  chuni_item_cmission_progress                                     chuni_item_cmission_progress[]
  chuni_item_duel                                                  chuni_item_duel[]
  chuni_item_favorite                                              chuni_item_favorite[]
  chuni_item_gacha                                                 chuni_item_gacha[]
  chuni_item_item                                                  chuni_item_item[]
  chuni_item_login_bonus                                           chuni_item_login_bonus[]
  chuni_item_map                                                   chuni_item_map[]
  chuni_item_map_area                                              chuni_item_map_area[]
  chuni_item_matching                                              chuni_item_matching[]
  chuni_item_print_detail                                          chuni_item_print_detail[]
  chuni_item_print_state                                           chuni_item_print_state[]
  chuni_profile_activity                                           chuni_profile_activity[]
  chuni_profile_charge                                             chuni_profile_charge[]
  chuni_profile_data                                               chuni_profile_data[]
  chuni_profile_data_ex                                            chuni_profile_data_ex[]
  chuni_profile_emoney                                             chuni_profile_emoney[]
  chuni_profile_net_battle                                         chuni_profile_net_battle?
  chuni_profile_option                                             chuni_profile_option?
  chuni_profile_option_ex                                          chuni_profile_option_ex?
  chuni_profile_overpower                                          chuni_profile_overpower[]
  chuni_profile_rating                                             chuni_profile_rating[]
  chuni_profile_recent_rating                                      chuni_profile_recent_rating?
  chuni_profile_region                                             chuni_profile_region[]
  chuni_score_best                                                 chuni_score_best[]
  chuni_score_course                                               chuni_score_course[]
  chuni_score_playlog                                              chuni_score_playlog[]
  cxb_playlog                                                      cxb_playlog[]
  cxb_profile                                                      cxb_profile[]
  cxb_ranking                                                      cxb_ranking[]
  cxb_rev_energy                                                   cxb_rev_energy?
  cxb_score                                                        cxb_score[]
  diva_playlog                                                     diva_playlog[]
  diva_profile                                                     diva_profile[]
  diva_profile_customize_item                                      diva_profile_customize_item[]
  diva_profile_module                                              diva_profile_module[]
  diva_profile_pv_customize                                        diva_profile_pv_customize[]
  diva_profile_shop                                                diva_profile_shop[]
  diva_score                                                       diva_score[]
  event_log                                                        event_log[]
  idac_profile                                                     idac_profile[]
  idac_profile_avatar                                              idac_profile_avatar?
  idac_profile_config                                              idac_profile_config?
  idac_profile_rank                                                idac_profile_rank[]
  idac_profile_stock                                               idac_profile_stock[]
  idac_profile_theory                                              idac_profile_theory[]
  idac_user_car                                                    idac_user_car[]
  idac_user_challenge                                              idac_user_challenge[]
  idac_user_course                                                 idac_user_course[]
  idac_user_stamp                                                  idac_user_stamp[]
  idac_user_story                                                  idac_user_story[]
  idac_user_story_episode                                          idac_user_story_episode[]
  idac_user_story_episode_difficulty                               idac_user_story_episode_difficulty[]
  idac_user_theory_course                                          idac_user_theory_course[]
  idac_user_theory_partner                                         idac_user_theory_partner[]
  idac_user_theory_running                                         idac_user_theory_running[]
  idac_user_ticket                                                 idac_user_ticket[]
  idac_user_time_trial                                             idac_user_time_trial[]
  idac_user_timetrial_event                                        idac_user_timetrial_event[]
  idac_user_vs_info                                                idac_user_vs_info[]
  mai2_item_card                                                   mai2_item_card[]
  mai2_item_character                                              mai2_item_character[]
  mai2_item_charge                                                 mai2_item_charge[]
  mai2_item_favorite                                               mai2_item_favorite[]
  mai2_item_favorite_music                                         mai2_item_favorite_music[]
  mai2_item_friend_season_ranking                                  mai2_item_friend_season_ranking[]
  mai2_item_item                                                   mai2_item_item[]
  mai2_item_login_bonus                                            mai2_item_login_bonus[]
  mai2_item_map                                                    mai2_item_map[]
  mai2_item_present                                                mai2_item_present[]
  mai2_item_print_detail                                           mai2_item_print_detail[]
  mai2_playlog                                                     mai2_playlog[]
  mai2_playlog_2p                                                  mai2_playlog_2p[]
  mai2_profile_activity                                            mai2_profile_activity[]
  mai2_profile_consec_logins                                       mai2_profile_consec_logins[]
  mai2_profile_detail                                              mai2_profile_detail[]
  mai2_profile_extend                                              mai2_profile_extend[]
  mai2_profile_ghost                                               mai2_profile_ghost[]
  mai2_profile_option                                              mai2_profile_option[]
  mai2_profile_rating                                              mai2_profile_rating[]
  mai2_profile_region                                              mai2_profile_region[]
  mai2_score_best                                                  mai2_score_best[]
  mai2_score_course                                                mai2_score_course[]
  mai2_user_intimate                                               mai2_user_intimate[]
  mai2_user_rival_mai2_user_rival_rivalToaime_user                 mai2_user_rival[]                    @relation("mai2_user_rival_rivalToaime_user")
  mai2_user_rival_mai2_user_rival_userToaime_user                  mai2_user_rival[]                    @relation("mai2_user_rival_userToaime_user")
  maimai_playlog                                                   maimai_playlog[]
  maimai_profile_boss                                              maimai_profile_boss?
  maimai_profile_detail                                            maimai_profile_detail[]
  maimai_profile_grade_status                                      maimai_profile_grade_status[]
  maimai_profile_option                                            maimai_profile_option[]
  maimai_profile_recent_rating                                     maimai_profile_recent_rating?
  maimai_profile_web_option                                        maimai_profile_web_option[]
  maimai_score_best                                                maimai_score_best[]
  ongeki_gp_log                                                    ongeki_gp_log[]
  ongeki_profile_activity                                          ongeki_profile_activity[]
  ongeki_profile_data                                              ongeki_profile_data[]
  ongeki_profile_kop                                               ongeki_profile_kop[]
  ongeki_profile_option                                            ongeki_profile_option?
  ongeki_profile_rating                                            ongeki_profile_rating[]
  ongeki_profile_rating_log                                        ongeki_profile_rating_log[]
  ongeki_profile_recent_rating                                     ongeki_profile_recent_rating?
  ongeki_profile_region                                            ongeki_profile_region[]
  ongeki_profile_rival_ongeki_profile_rival_userToaime_user        ongeki_profile_rival[]               @relation("ongeki_profile_rival_userToaime_user")
  ongeki_profile_rival_ongeki_profile_rival_rivalUserIdToaime_user ongeki_profile_rival[]               @relation("ongeki_profile_rival_rivalUserIdToaime_user")
  ongeki_profile_training_room                                     ongeki_profile_training_room[]
  ongeki_score_best                                                ongeki_score_best[]
  ongeki_score_playlog                                             ongeki_score_playlog[]
  ongeki_score_tech_count                                          ongeki_score_tech_count[]
  ongeki_session_log                                               ongeki_session_log[]
  ongeki_tech_event_ranking                                        ongeki_tech_event_ranking[]
  ongeki_user_boss                                                 ongeki_user_boss[]
  ongeki_user_card                                                 ongeki_user_card[]
  ongeki_user_chapter                                              ongeki_user_chapter[]
  ongeki_user_character                                            ongeki_user_character[]
  ongeki_user_deck                                                 ongeki_user_deck[]
  ongeki_user_event_music                                          ongeki_user_event_music[]
  ongeki_user_event_point                                          ongeki_user_event_point[]
  ongeki_user_gacha                                                ongeki_user_gacha[]
  ongeki_user_gacha_supply                                         ongeki_user_gacha_supply[]
  ongeki_user_item                                                 ongeki_user_item[]
  ongeki_user_login_bonus                                          ongeki_user_login_bonus[]
  ongeki_user_memorychapter                                        ongeki_user_memorychapter[]
  ongeki_user_mission_point                                        ongeki_user_mission_point[]
  ongeki_user_music_item                                           ongeki_user_music_item[]
  ongeki_user_print_detail                                         ongeki_user_print_detail[]
  ongeki_user_scenerio                                             ongeki_user_scenerio[]
  ongeki_user_story                                                ongeki_user_story[]
  ongeki_user_tech_event                                           ongeki_user_tech_event[]
  ongeki_user_trade_item                                           ongeki_user_trade_item[]
  pokken_item                                                      pokken_item?
  pokken_match_data                                                pokken_match_data[]
  pokken_pokemon_data                                              pokken_pokemon_data[]
  pokken_profile                                                   pokken_profile?
  sao_end_sessions                                                 sao_end_sessions[]
  sao_equipment_data                                               sao_equipment_data[]
  sao_hero_log_data                                                sao_hero_log_data[]
  sao_hero_party                                                   sao_hero_party[]
  sao_item_data                                                    sao_item_data[]
  sao_play_sessions                                                sao_play_sessions[]
  sao_player_beginner_mission                                      sao_player_beginner_mission?
  sao_player_ex_bonus                                              sao_player_ex_bonus[]
  sao_player_hero_card                                             sao_player_hero_card[]
  sao_player_quest                                                 sao_player_quest[]
  sao_player_resource_card                                         sao_player_resource_card[]
  sao_player_tutorial                                              sao_player_tutorial[]
  sao_profile                                                      sao_profile?
  wacca_bingo                                                      wacca_bingo?
  wacca_favorite_song                                              wacca_favorite_song[]
  wacca_friend_wacca_friend_profile_senderToaime_user              wacca_friend[]                       @relation("wacca_friend_profile_senderToaime_user")
  wacca_friend_wacca_friend_profile_recieverToaime_user            wacca_friend[]                       @relation("wacca_friend_profile_recieverToaime_user")
  wacca_gate                                                       wacca_gate[]
  wacca_item                                                       wacca_item[]
  wacca_option                                                     wacca_option[]
  wacca_profile                                                    wacca_profile[]
  wacca_score_best                                                 wacca_score_best[]
  wacca_score_playlog                                              wacca_score_playlog[]
  wacca_score_stageup                                              wacca_score_stageup[]
  wacca_song_unlock                                                wacca_song_unlock[]
  wacca_ticket                                                     wacca_ticket[]
  wacca_trophy                                                     wacca_trophy[]
}

model alembic_version {
  version_num String @id @db.VarChar(32)
}

model arcade {
  id                                       Int            @id @default(autoincrement())
  name                                     String?        @db.VarChar(255)
  nickname                                 String?        @db.VarChar(255)
  country                                  String?        @db.VarChar(3)
  country_id                               Int?
  state                                    String?        @db.VarChar(255)
  city                                     String?        @db.VarChar(255)
  region_id                                Int?
  timezone                                 String?        @db.VarChar(255)
  ip                                       String?        @db.VarChar(39)
  arcade_owner_arcade_owner_arcadeToarcade arcade_owner[] @relation("arcade_owner_arcadeToarcade")
  event_log_event_log_arcadeToarcade       event_log[]    @relation("event_log_arcadeToarcade")
  machine_machine_arcadeToarcade           machine[]      @relation("machine_arcadeToarcade")
}

model arcade_owner {
  user                               Int
  arcade                             Int
  permissions                        Int
  aime_user                          aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "arcade_owner_ibfk_1")
  arcade_arcade_owner_arcadeToarcade arcade    @relation("arcade_owner_arcadeToarcade", fields: [arcade], references: [id], onDelete: Cascade, map: "arcade_owner_ibfk_2")

  @@id([user, arcade])
  @@index([arcade], map: "arcade")
}

model chuni_item_character {
  id            Int       @id @default(autoincrement())
  user          Int
  characterId   Int?
  level         Int?
  param1        Int?
  param2        Int?
  isValid       Boolean?
  skillId       Int?
  isNewMark     Boolean?
  playCount     Int?
  friendshipExp Int?
  assignIllust  Int?
  exMaxLv       Int?
  aime_user     aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_character_ibfk_1")

  @@unique([user, characterId], map: "chuni_item_character_uk")
}

model chuni_item_cmission {
  id        Int       @id @default(autoincrement())
  user      Int
  missionId Int
  point     Int?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_cmission_ibfk_1")

  @@unique([user, missionId], map: "chuni_item_cmission_uk")
}

model chuni_item_cmission_progress {
  id        Int       @id @default(autoincrement())
  user      Int
  missionId Int
  order     Int?
  stage     Int?
  progress  Int?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_cmission_progress_ibfk_1")

  @@unique([user, missionId, order], map: "chuni_item_cmission_progress_uk")
}

model chuni_item_duel {
  id           Int       @id @default(autoincrement())
  user         Int
  duelId       Int?
  progress     Int?
  point        Int?
  isClear      Boolean?
  lastPlayDate String?   @db.VarChar(25)
  param1       Int?
  param2       Int?
  param3       Int?
  param4       Int?
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_duel_ibfk_1")

  @@unique([user, duelId], map: "chuni_item_duel_uk")
}

model chuni_item_favorite {
  id        Int       @id @default(autoincrement())
  user      Int
  version   Int
  favId     Int
  favKind   Int       @default(1)
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_favorite_ibfk_1")

  @@unique([version, user, favId], map: "chuni_item_favorite_uk")
  @@index([user], map: "user")
}

model chuni_item_gacha {
  id              Int       @id @default(autoincrement())
  user            Int
  gachaId         Int
  totalGachaCnt   Int?      @default(0)
  ceilingGachaCnt Int?      @default(0)
  dailyGachaCnt   Int?      @default(0)
  fiveGachaCnt    Int?      @default(0)
  elevenGachaCnt  Int?      @default(0)
  dailyGachaDate  DateTime  @default(now()) @db.Timestamp(0)
  aime_user       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_gacha_ibfk_1")

  @@unique([user, gachaId], map: "chuni_item_gacha_uk")
}

model chuni_item_item {
  id        Int       @id @default(autoincrement())
  user      Int
  itemId    Int?
  itemKind  Int?
  stock     Int?
  isValid   Boolean?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_item_ibfk_1")

  @@unique([user, itemId, itemKind], map: "chuni_item_item_uk")
}

model chuni_item_login_bonus {
  id             Int       @id @default(autoincrement())
  user           Int
  version        Int
  presetId       Int
  bonusCount     Int       @default(0)
  lastUpdateDate DateTime? @default(dbgenerated("('2017-12-31 19:00:00')")) @db.Timestamp(0)
  isWatched      Boolean?  @default(false)
  isFinished     Boolean?  @default(false)
  aime_user      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_login_bonus_ibfk_1")

  @@unique([version, user, presetId], map: "chuni_item_login_bonus_uk")
  @@index([user], map: "user")
}

model chuni_item_map {
  id          Int       @id @default(autoincrement())
  user        Int
  mapId       Int?
  position    Int?
  isClear     Boolean?
  areaId      Int?
  routeNumber Int?
  eventId     Int?
  rate        Int?
  statusCount Int?
  isValid     Boolean?
  aime_user   aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_map_ibfk_1")

  @@unique([user, mapId], map: "chuni_item_map_uk")
}

model chuni_item_map_area {
  id              Int       @id @default(autoincrement())
  user            Int
  mapAreaId       Int?
  rate            Int?
  isClear         Boolean?
  isLocked        Boolean?
  position        Int?
  statusCount     Int?
  remainGridCount Int?
  aime_user       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_map_area_ibfk_1")

  @@unique([user, mapAreaId], map: "chuni_item_map_area_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model chuni_item_matching {
  roomId                 Int
  user                   Int
  version                Int
  restMSec               Int       @default(60)
  isFull                 Boolean   @default(false)
  matchingMemberInfoList String    @db.LongText
  aime_user              aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_matching_ibfk_1")

  @@id([roomId, version])
  @@index([user], map: "user")
}

model chuni_item_print_detail {
  id              Int       @id @default(autoincrement())
  user            Int
  cardId          Int
  printDate       DateTime  @db.Timestamp(0)
  serialId        String    @unique(map: "chuni_item_print_detail_uk") @db.VarChar(20)
  placeId         Int
  clientId        String    @db.VarChar(11)
  printerSerialId String    @db.VarChar(20)
  printOption1    Boolean?  @default(false)
  printOption2    Boolean?  @default(false)
  printOption3    Boolean?  @default(false)
  printOption4    Boolean?  @default(false)
  printOption5    Boolean?  @default(false)
  printOption6    Boolean?  @default(false)
  printOption7    Boolean?  @default(false)
  printOption8    Boolean?  @default(false)
  printOption9    Boolean?  @default(false)
  printOption10   Boolean?  @default(false)
  created         String?   @default("") @db.VarChar(255)
  aime_user       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_print_detail_ibfk_1")

  @@index([user], map: "user")
}

model chuni_item_print_state {
  id           Int       @id @default(autoincrement())
  user         Int
  hasCompleted Boolean   @default(false)
  limitDate    DateTime  @default(dbgenerated("('2037-12-31 19:00:00')")) @db.Timestamp(0)
  placeId      Int?
  cardId       Int?
  gachaId      Int?
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_item_print_state_ibfk_1")

  @@unique([id, user], map: "chuni_item_print_state_uk")
  @@index([user], map: "user")
}

model chuni_profile_activity {
  id         Int       @id @default(autoincrement())
  user       Int
  kind       Int?
  activityId Int?
  sortNumber Int?
  param1     Int?
  param2     Int?
  param3     Int?
  param4     Int?
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_activity_ibfk_1")

  @@unique([user, kind, activityId], map: "chuni_profile_activity_uk")
}

model chuni_profile_charge {
  id           Int       @id @default(autoincrement())
  user         Int
  chargeId     Int?
  stock        Int?
  purchaseDate String?   @db.VarChar(25)
  validDate    String?   @db.VarChar(25)
  param1       Int?
  param2       Int?
  paramDate    String?   @db.VarChar(25)
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_charge_ibfk_1")

  @@unique([user, chargeId], map: "chuni_profile_charge_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model chuni_profile_data {
  id                           Int                 @id @default(autoincrement())
  user                         Int
  version                      Int
  exp                          Int?
  level                        Int?
  point                        Int?
  frameId                      Int?
  isMaimai                     Boolean?
  trophyId                     Int?
  userName                     String?             @db.VarChar(25)
  isWebJoin                    Boolean?
  playCount                    Int?
  lastGameId                   String?             @db.VarChar(25)
  totalPoint                   BigInt?
  characterId                  Int?
  firstGameId                  String?             @db.VarChar(25)
  friendCount                  Int?
  lastPlaceId                  Int?
  nameplateId                  Int?
  totalMapNum                  Int?
  lastAllNetId                 Int?
  lastClientId                 String?             @db.VarChar(25)
  lastPlayDate                 String?             @db.VarChar(25)
  lastRegionId                 Int?
  playerRating                 Int?
  totalHiScore                 Int?
  webLimitDate                 String?             @db.VarChar(25)
  firstPlayDate                String?             @db.VarChar(25)
  highestRating                Int?
  lastPlaceName                String?             @db.VarChar(25)
  multiWinCount                Int?
  acceptResCount               Int?
  lastRegionName               String?             @db.VarChar(25)
  lastRomVersion               String?             @db.VarChar(25)
  multiPlayCount               Int?
  firstRomVersion              String?             @db.VarChar(25)
  lastDataVersion              String?             @db.VarChar(25)
  requestResCount              Int?
  successResCount              Int?
  eventWatchedDate             String?             @db.VarChar(25)
  firstDataVersion             String?             @db.VarChar(25)
  reincarnationNum             Int?
  playedTutorialBit            Int?
  totalBasicHighScore          Int?
  totalExpertHighScore         Int?
  totalMasterHighScore         Int?
  totalRepertoireCount         Int?
  firstTutorialCancelNum       Int?
  totalAdvancedHighScore       Int?
  masterTutorialCancelNum      Int?
  ext1                         Int?
  ext2                         Int?
  ext3                         Int?
  ext4                         Int?
  ext5                         Int?
  ext6                         Int?
  ext7                         Int?
  ext8                         Int?
  ext9                         Int?
  ext10                        Int?
  extStr1                      String?             @db.VarChar(255)
  extStr2                      String?             @db.VarChar(255)
  extLong1                     Int?
  extLong2                     Int?
  mapIconId                    Int?
  compatibleCmVersion          String?             @db.VarChar(25)
  medal                        Int?
  voiceId                      Int?
  teamId                       Int?
  eliteRankPoint               Int?                @default(0)
  stockedGridCount             Int?                @default(0)
  netBattleLoseCount           Int?                @default(0)
  netBattleHostErrCnt          Int?                @default(0)
  netBattle4thCount            Int?                @default(0)
  overPowerRate                Int?                @default(0)
  battleRewardStatus           Int?                @default(0)
  netBattle1stCount            Int?                @default(0)
  charaIllustId                Int?                @default(0)
  userNameEx                   String?             @default("") @db.VarChar(8)
  netBattleWinCount            Int?                @default(0)
  netBattleCorrection          Int?                @default(0)
  classEmblemMedal             Int?                @default(0)
  overPowerPoint               Int?                @default(0)
  netBattleErrCnt              Int?                @default(0)
  battleRankId                 Int?                @default(0)
  netBattle3rdCount            Int?                @default(0)
  netBattleConsecutiveWinCount Int?                @default(0)
  overPowerLowerRank           Int?                @default(0)
  classEmblemBase              Int?                @default(0)
  battleRankPoint              Int?                @default(0)
  netBattle2ndCount            Int?                @default(0)
  totalUltimaHighScore         Int?                @default(0)
  skillId                      Int?                @default(0)
  lastCountryCode              String?             @default("JPN") @db.VarChar(5)
  isNetBattleHost              Boolean?            @default(false)
  battleRewardCount            Int?                @default(0)
  battleRewardIndex            Int?                @default(0)
  netBattlePlayCount           Int?                @default(0)
  exMapLoopCount               Int?                @default(0)
  netBattleEndState            Int?                @default(0)
  rankUpChallengeResults       String?             @db.LongText
  avatarBack                   Int?                @default(0)
  avatarFace                   Int?                @default(0)
  avatarPoint                  Int?                @default(0)
  avatarItem                   Int?                @default(0)
  avatarWear                   Int?                @default(0)
  avatarFront                  Int?                @default(0)
  avatarSkin                   Int?                @default(0)
  avatarHead                   Int?                @default(0)
  aime_user                    aime_user           @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_data_ibfk_1")
  chuni_profile_team           chuni_profile_team? @relation(fields: [teamId], references: [id], onUpdate: SetNull, map: "chuni_profile_data_ibfk_2")

  @@unique([user, version], map: "chuni_profile_profile_uk")
  @@index([teamId], map: "teamId")
}

model chuni_profile_data_ex {
  id                  Int       @id @default(autoincrement())
  user                Int
  version             Int
  ext1                Int?
  ext2                Int?
  ext3                Int?
  ext4                Int?
  ext5                Int?
  ext6                Int?
  ext7                Int?
  ext8                Int?
  ext9                Int?
  ext10               Int?
  ext11               Int?
  ext12               Int?
  ext13               Int?
  ext14               Int?
  ext15               Int?
  ext16               Int?
  ext17               Int?
  ext18               Int?
  ext19               Int?
  ext20               Int?
  medal               Int?
  extStr1             String?   @db.VarChar(255)
  extStr2             String?   @db.VarChar(255)
  extStr3             String?   @db.VarChar(255)
  extStr4             String?   @db.VarChar(255)
  extStr5             String?   @db.VarChar(255)
  voiceId             Int?
  extLong1            Int?
  extLong2            Int?
  extLong3            Int?
  extLong4            Int?
  extLong5            Int?
  mapIconId           Int?
  compatibleCmVersion String?   @db.VarChar(25)
  aime_user           aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_data_ex_ibfk_1")

  @@unique([user, version], map: "chuni_profile_data_ex_uk")
}

model chuni_profile_emoney {
  id           Int       @id @default(autoincrement())
  user         Int
  ext1         Int?
  ext2         Int?
  ext3         Int?
  type         Int?
  emoneyBrand  Int?
  emoneyCredit Int?
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_emoney_ibfk_1")

  @@unique([user, emoneyBrand], map: "chuni_profile_emoney_uk")
}

model chuni_profile_net_battle {
  id                      Int       @id @default(autoincrement())
  user                    Int       @unique(map: "user")
  isRankUpChallengeFailed Boolean?
  highestBattleRankId     Int?
  battleIconId            Int?
  battleIconNum           Int?
  avatarEffectPoint       Int?
  aime_user               aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_net_battle_ibfk_1")
}

model chuni_profile_option {
  id                    Int       @id @default(autoincrement())
  user                  Int       @unique(map: "chuni_profile_option_uk")
  speed                 Int?
  bgInfo                Int?
  rating                Int?
  privacy               Int?
  judgePos              Int?
  matching              Int?
  guideLine             Int?
  headphone             Int?
  optionSet             Int?
  fieldColor            Int?
  guideSound            Int?
  successAir            Int?
  successTap            Int?
  judgeAttack           Int?
  playerLevel           Int?
  soundEffect           Int?
  judgeJustice          Int?
  successExTap          Int?
  successFlick          Int?
  successSkill          Int?
  successSlideHold      Int?
  successTapTimbre      Int?
  ext1                  Int?
  ext2                  Int?
  ext3                  Int?
  ext4                  Int?
  ext5                  Int?
  ext6                  Int?
  ext7                  Int?
  ext8                  Int?
  ext9                  Int?
  ext10                 Int?
  categoryDetail        Int?      @default(0)
  judgeTimingOffset_120 Int?      @default(0)
  resultVoiceShort      Int?      @default(0)
  judgeAppendSe         Int?      @default(0)
  judgeCritical         Int?      @default(0)
  trackSkip             Int?      @default(0)
  selectMusicFilterLv   Int?      @default(0)
  sortMusicFilterLv     Int?      @default(0)
  sortMusicGenre        Int?      @default(0)
  speed_120             Int?      @default(0)
  judgeTimingOffset     Int?      @default(0)
  mirrorFumen           Int?      @default(0)
  playTimingOffset_120  Int?      @default(0)
  hardJudge             Int?      @default(0)
  notesThickness        Int?      @default(0)
  fieldWallPosition     Int?      @default(0)
  playTimingOffset      Int?      @default(0)
  fieldWallPosition_120 Int?      @default(0)
  aime_user             aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_option_ibfk_1")
}

model chuni_profile_option_ex {
  id        Int       @id @default(autoincrement())
  user      Int       @unique(map: "chuni_profile_option_ex_uk")
  ext1      Int?
  ext2      Int?
  ext3      Int?
  ext4      Int?
  ext5      Int?
  ext6      Int?
  ext7      Int?
  ext8      Int?
  ext9      Int?
  ext10     Int?
  ext11     Int?
  ext12     Int?
  ext13     Int?
  ext14     Int?
  ext15     Int?
  ext16     Int?
  ext17     Int?
  ext18     Int?
  ext19     Int?
  ext20     Int?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_option_ex_ibfk_1")
}

model chuni_profile_overpower {
  id         Int       @id @default(autoincrement())
  user       Int
  genreId    Int?
  difficulty Int?
  rate       Int?
  point      Int?
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_overpower_ibfk_1")

  @@unique([user, genreId, difficulty], map: "chuni_profile_emoney_uk")
}

model chuni_profile_rating {
  id             Int       @id @default(autoincrement())
  user           Int
  version        Int
  type           String    @db.VarChar(255)
  index          Int
  musicId        Int?
  difficultId    Int?
  romVersionCode Int?
  score          Int?
  aime_user      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_rating_ibfk_1")

  @@unique([user, version, type, index], map: "chuni_profile_rating_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model chuni_profile_recent_rating {
  id           Int       @id @default(autoincrement())
  user         Int       @unique(map: "chuni_profile_recent_rating_uk")
  recentRating String?   @db.LongText
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_recent_rating_ibfk_1")
}

model chuni_profile_region {
  id        Int       @id @default(autoincrement())
  user      Int
  regionId  Int?
  playCount Int?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_profile_region_ibfk_1")

  @@unique([user, regionId], map: "chuni_profile_region_uk")
}

model chuni_profile_team {
  id                 Int                  @id @default(autoincrement())
  teamName           String?              @db.VarChar(255)
  teamPoint          Int?
  userTeamPoint      String?              @db.LongText
  chuni_profile_data chuni_profile_data[]
}

model chuni_score_best {
  id              Int       @id @default(autoincrement())
  user            Int
  musicId         Int?
  level           Int?
  playCount       Int?
  scoreMax        Int?
  resRequestCount Int?
  resAcceptCount  Int?
  resSuccessCount Int?
  missCount       Int?
  maxComboCount   Int?
  isFullCombo     Boolean?
  isAllJustice    Boolean?
  isSuccess       Int?
  fullChain       Int?
  maxChain        Int?
  scoreRank       Int?
  isLock          Boolean?
  ext1            Int?
  theoryCount     Int?
  aime_user       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_score_best_ibfk_1")

  @@unique([user, musicId, level], map: "chuni_score_best_uk")
}

model chuni_score_course {
  id           Int       @id @default(autoincrement())
  user         Int
  courseId     Int?
  classId      Int?
  playCount    Int?
  scoreMax     Int?
  isFullCombo  Boolean?
  isAllJustice Boolean?
  isSuccess    Boolean?
  scoreRank    Int?
  eventId      Int?
  lastPlayDate String?   @db.VarChar(25)
  param1       Int?
  param2       Int?
  param3       Int?
  param4       Int?
  isClear      Boolean?
  theoryCount  Int?
  orderId      Int?
  playerRating Int?
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_score_course_ibfk_1")

  @@unique([user, courseId], map: "chuni_score_course_uk")
}

model chuni_score_playlog {
  id                Int       @id @default(autoincrement())
  user              Int
  orderId           Int?
  sortNumber        Int?
  placeId           Int?
  playDate          String?   @db.VarChar(20)
  userPlayDate      String?   @db.VarChar(20)
  musicId           Int?
  level             Int?
  customId          Int?
  playedUserId1     Int?
  playedUserId2     Int?
  playedUserId3     Int?
  playedUserName1   String?   @db.VarChar(20)
  playedUserName2   String?   @db.VarChar(20)
  playedUserName3   String?   @db.VarChar(20)
  playedMusicLevel1 Int?
  playedMusicLevel2 Int?
  playedMusicLevel3 Int?
  playedCustom1     Int?
  playedCustom2     Int?
  playedCustom3     Int?
  track             Int?
  score             Int?
  rank              Int?
  maxCombo          Int?
  maxChain          Int?
  rateTap           Int?
  rateHold          Int?
  rateSlide         Int?
  rateAir           Int?
  rateFlick         Int?
  judgeGuilty       Int?
  judgeAttack       Int?
  judgeJustice      Int?
  judgeCritical     Int?
  eventId           Int?
  playerRating      Int?
  isNewRecord       Boolean?
  isFullCombo       Boolean?
  fullChainKind     Int?
  isAllJustice      Boolean?
  isContinue        Boolean?
  isFreeToPlay      Boolean?
  characterId       Int?
  skillId           Int?
  playKind          Int?
  isClear           Int?      @db.TinyInt
  skillLevel        Int?
  skillEffect       Int?
  placeName         String?   @db.VarChar(255)
  isMaimai          Boolean?
  commonId          Int?
  charaIllustId     Int?
  romVersion        String?   @db.VarChar(255)
  judgeHeaven       Int?
  regionId          Int?
  machineType       Int?
  ticketId          Int?
  aime_user         aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "chuni_score_playlog_ibfk_1")

  @@index([user], map: "user")
}

model chuni_static_cards {
  id          Int    @id @default(autoincrement())
  version     Int
  cardId      Int
  charaName   String @db.VarChar(255)
  charaId     Int
  presentName String @db.VarChar(255)
  rarity      Int?   @default(2)
  labelType   Int
  difType     Int
  miss        Int
  combo       Int
  chain       Int
  skillName   String @db.VarChar(255)

  @@unique([version, cardId], map: "chuni_static_cards_uk")
}

model chuni_static_charge {
  id             Int      @id @default(autoincrement())
  version        Int
  chargeId       Int?
  name           String?  @db.VarChar(255)
  expirationDays Int?
  consumeType    Int?
  sellingAppeal  Boolean?
  enabled        Boolean? @default(true)

  @@unique([version, chargeId], map: "chuni_static_charge_uk")
}

model chuni_static_events {
  id        Int       @id @default(autoincrement())
  version   Int
  eventId   Int?
  type      Int?
  name      String?   @db.VarChar(255)
  startDate DateTime? @default(now()) @db.Timestamp(0)
  enabled   Boolean?  @default(true)

  @@unique([version, eventId], map: "chuni_static_events_uk")
}

model chuni_static_gacha_cards {
  id       Int      @id @default(autoincrement())
  gachaId  Int
  cardId   Int
  rarity   Int
  weight   Int?     @default(1)
  isPickup Boolean? @default(false)

  @@unique([gachaId, cardId], map: "chuni_static_gacha_cards_uk")
}

model chuni_static_gachas {
  id              Int       @id @default(autoincrement())
  version         Int
  gachaId         Int
  gachaName       String    @db.VarChar(255)
  type            Int       @default(0)
  kind            Int       @default(0)
  isCeiling       Boolean?  @default(false)
  ceilingCnt      Int?      @default(10)
  changeRateCnt1  Int?      @default(0)
  changeRateCnt2  Int?      @default(0)
  startDate       DateTime? @default(dbgenerated("('2017-12-31 19:00:00')")) @db.Timestamp(0)
  endDate         DateTime? @default(dbgenerated("('2037-12-31 19:00:00')")) @db.Timestamp(0)
  noticeStartDate DateTime? @default(dbgenerated("('2017-12-31 19:00:00')")) @db.Timestamp(0)
  noticeEndDate   DateTime? @default(dbgenerated("('2037-12-31 19:00:00')")) @db.Timestamp(0)

  @@unique([version, gachaId, gachaName], map: "chuni_static_gachas_uk")
}

model chuni_static_login_bonus {
  id                              Int                             @id @default(autoincrement())
  version                         Int
  presetId                        Int
  loginBonusId                    Int
  loginBonusName                  String                          @db.VarChar(255)
  presentId                       Int
  presentName                     String                          @db.VarChar(255)
  itemNum                         Int
  needLoginDayCount               Int
  loginBonusCategoryType          Int
  chuni_static_login_bonus_preset chuni_static_login_bonus_preset @relation(fields: [presetId, version], references: [presetId, version], onDelete: Cascade, map: "chuni_static_login_bonus_ibfk_1")

  @@unique([version, presetId, loginBonusId], map: "chuni_static_login_bonus_uk")
  @@index([presetId, version], map: "chuni_static_login_bonus_ibfk_1")
}

model chuni_static_login_bonus_preset {
  presetId                 Int
  version                  Int
  presetName               String                     @db.VarChar(255)
  isEnabled                Boolean?                   @default(true)
  chuni_static_login_bonus chuni_static_login_bonus[]

  @@id([presetId, version])
}

model chuni_static_music {
  id           Int     @id @default(autoincrement())
  version      Int
  songId       Int?
  chartId      Int?
  title        String? @db.VarChar(255)
  artist       String? @db.VarChar(255)
  level        Float?  @db.Float
  genre        String? @db.VarChar(255)
  jacketPath   String? @db.VarChar(255)
  worldsEndTag String? @db.VarChar(7)

  @@unique([version, songId, chartId], map: "chuni_static_music_uk")
}

model cxb_playlog {
  id          Int       @id @default(autoincrement())
  user        Int
  song_mcode  String?   @db.VarChar(7)
  chart_id    Int?
  score       Int?
  clear       Int?
  flawless    Int?
  super       Int?
  cool        Int?
  fast        Int?
  fast2       Int?
  slow        Int?
  slow2       Int?
  fail        Int?
  combo       Int?
  date_scored DateTime? @default(now()) @db.Timestamp(0)
  grade       Int?
  aime_user   aime_user @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "cxb_playlog_ibfk_1")

  @@index([user], map: "user")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model cxb_profile {
  id        Int       @id @default(autoincrement())
  user      Int
  version   Int
  index     Int
  data      String    @db.LongText
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "cxb_profile_ibfk_1")

  @@unique([user, index], map: "cxb_profile_uk")
}

model cxb_ranking {
  id        Int       @id @default(autoincrement())
  user      Int
  rev_id    Int?
  song_id   Int?
  score     Int?
  clear     Int?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "cxb_ranking_ibfk_1")

  @@unique([user, rev_id], map: "cxb_ranking_uk")
}

model cxb_rev_energy {
  id        Int       @id @default(autoincrement())
  user      Int       @unique(map: "cxb_rev_energy_uk")
  energy    Int       @default(0)
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "cxb_rev_energy_ibfk_1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model cxb_score {
  id           Int       @id @default(autoincrement())
  user         Int
  game_version Int?
  song_mcode   String?   @db.VarChar(7)
  song_index   Int?
  data         String?   @db.LongText
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "cxb_score_ibfk_1")

  @@unique([user, song_mcode, song_index], map: "cxb_score_uk")
}

model cxb_static_music {
  id       Int     @id @default(autoincrement())
  version  Int
  songId   String? @db.VarChar(255)
  index    Int?
  chartId  Int?
  title    String? @db.VarChar(255)
  artist   String? @db.VarChar(255)
  category String? @db.VarChar(255)
  level    Float?  @db.Float

  @@unique([version, songId, chartId, index], map: "cxb_static_music_uk")
}

model diva_playlog {
  id          Int       @id @default(autoincrement())
  user        Int
  version     Int?
  pv_id       Int?
  difficulty  Int?
  edition     Int?
  score       Int?
  atn_pnt     Int?
  clr_kind    Int?
  sort_kind   Int?
  cool        Int?
  fine        Int?
  safe        Int?
  sad         Int?
  worst       Int?
  max_combo   Int?
  date_scored DateTime? @default(now()) @db.Timestamp(0)
  aime_user   aime_user @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "diva_playlog_ibfk_1")

  @@index([user], map: "user")
}

model diva_profile {
  id                     Int       @id @default(autoincrement())
  user                   Int
  version                Int
  player_name            String    @db.VarChar(10)
  lv_str                 String    @default("Dab on 'em") @db.VarChar(24)
  lv_num                 Int       @default(0)
  lv_pnt                 Int       @default(0)
  vcld_pts               Int       @default(0)
  hp_vol                 Int       @default(100)
  btn_se_vol             Int       @default(100)
  btn_se_vol2            Int       @default(100)
  sldr_se_vol2           Int       @default(100)
  sort_kind              Int       @default(2)
  use_pv_mdl_eqp         Boolean   @default(true)
  use_mdl_pri            Boolean   @default(false)
  use_pv_skn_eqp         Boolean   @default(false)
  use_pv_btn_se_eqp      Boolean   @default(true)
  use_pv_sld_se_eqp      Boolean   @default(false)
  use_pv_chn_sld_se_eqp  Boolean   @default(false)
  use_pv_sldr_tch_se_eqp Boolean   @default(false)
  btn_se_eqp             Int       @default(-1)
  sld_se_eqp             Int       @default(-1)
  chn_sld_se_eqp         Int       @default(-1)
  sldr_tch_se_eqp        Int       @default(-1)
  nxt_pv_id              Int       @default(708)
  nxt_dffclty            Int       @default(2)
  nxt_edtn               Int       @default(0)
  cnp_cid                Int       @default(-1)
  cnp_val                Int       @default(-1)
  cnp_rr                 Int       @default(-1)
  cnp_sp                 String    @default("") @db.VarChar(255)
  dsp_clr_brdr           Int       @default(7)
  dsp_intrm_rnk          Int       @default(1)
  dsp_clr_sts            Int       @default(1)
  rgo_sts                Int       @default(1)
  lv_efct_id             Int       @default(0)
  lv_plt_id              Int       @default(1)
  skn_eqp                Int       @default(0)
  passwd_stat            Int       @default(0)
  passwd                 String    @default("**********") @db.VarChar(12)
  my_qst_id              String?   @default("-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1") @db.VarChar(128)
  my_qst_sts             String?   @default("-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1") @db.VarChar(128)
  aime_user              aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "diva_profile_ibfk_1")

  @@unique([user, version], map: "diva_profile_uk")
}

model diva_profile_customize_item {
  id        Int       @id @default(autoincrement())
  user      Int
  version   Int
  item_id   Int
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "diva_profile_customize_item_ibfk_1")

  @@unique([user, version, item_id], map: "diva_profile_customize_item_uk")
}

model diva_profile_module {
  id        Int       @id @default(autoincrement())
  user      Int
  version   Int
  module_id Int
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "diva_profile_module_ibfk_1")

  @@unique([user, version, module_id], map: "diva_profile_module_uk")
}

model diva_profile_pv_customize {
  id             Int       @id @default(autoincrement())
  user           Int
  version        Int
  pv_id          Int
  mdl_eqp_ary    String?   @default("-999,-999,-999") @db.VarChar(14)
  c_itm_eqp_ary  String?   @default("-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999") @db.VarChar(59)
  ms_itm_flg_ary String?   @default("-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1") @db.VarChar(59)
  skin           Int?      @default(-1)
  btn_se         Int?      @default(-1)
  sld_se         Int?      @default(-1)
  chsld_se       Int?      @default(-1)
  sldtch_se      Int?      @default(-1)
  aime_user      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "diva_profile_pv_customize_ibfk_1")

  @@unique([user, version, pv_id], map: "diva_profile_pv_customize_uk")
}

model diva_profile_shop {
  id             Int       @id @default(autoincrement())
  user           Int
  version        Int
  mdl_eqp_ary    String?   @db.VarChar(32)
  c_itm_eqp_ary  String?   @db.VarChar(59)
  ms_itm_flg_ary String?   @db.VarChar(59)
  aime_user      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "diva_profile_shop_ibfk_1")

  @@unique([user, version], map: "diva_profile_shop_uk")
}

model diva_score {
  id         Int       @id @default(autoincrement())
  user       Int
  version    Int?
  pv_id      Int?
  difficulty Int?
  edition    Int?
  score      Int?
  atn_pnt    Int?
  clr_kind   Int?
  sort_kind  Int?
  cool       Int?
  fine       Int?
  safe       Int?
  sad        Int?
  worst      Int?
  max_combo  Int?
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "diva_score_ibfk_1")

  @@unique([user, pv_id, difficulty, edition], map: "diva_score_uk")
}

model diva_static_items {
  id         Int      @id @default(autoincrement())
  version    Int
  itemId     Int?
  name       String?  @db.VarChar(255)
  type       Int?
  points     Int?
  unknown_0  Int?
  start_date String?  @db.VarChar(255)
  end_date   String?  @db.VarChar(255)
  enabled    Boolean? @default(true)

  @@unique([version, itemId], map: "diva_static_items_uk")
}

model diva_static_music {
  id                Int     @id @default(autoincrement())
  version           Int
  songId            Int?
  chartId           Int?
  title             String? @db.VarChar(255)
  vocaloid_arranger String? @db.VarChar(255)
  pv_illustrator    String? @db.VarChar(255)
  lyrics            String? @db.VarChar(255)
  bg_music          String? @db.VarChar(255)
  level             Float?  @db.Float
  bpm               Int?
  date              String? @db.VarChar(255)

  @@unique([version, songId, chartId], map: "diva_static_music_uk")
}

model diva_static_quests {
  id             Int      @id @default(autoincrement())
  version        Int
  questId        Int?
  name           String?  @db.VarChar(255)
  quest_enable   Boolean? @default(true)
  kind           Int?
  unknown_0      Int?
  unknown_1      Int?
  unknown_2      Int?
  quest_order    Int?
  start_datetime String?  @db.VarChar(255)
  end_datetime   String?  @db.VarChar(255)

  @@unique([version, questId], map: "diva_static_quests_uk")
}

model diva_static_shop {
  id         Int      @id @default(autoincrement())
  version    Int
  shopId     Int?
  name       String?  @db.VarChar(255)
  type       Int?
  points     Int?
  unknown_0  Int?
  start_date String?  @db.VarChar(255)
  end_date   String?  @db.VarChar(255)
  enabled    Boolean? @default(true)

  @@unique([version, shopId], map: "diva_static_shop_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model event_log {
  id                                 Int        @id @default(autoincrement())
  system                             String     @db.VarChar(255)
  type                               String     @db.VarChar(255)
  severity                           Int
  message                            String     @db.VarChar(1000)
  details                            String     @db.LongText
  when_logged                        DateTime   @default(now()) @db.Timestamp(0)
  user                               Int?
  arcade                             Int?
  machine                            Int?
  ip                                 String?    @db.TinyText
  game                               String?    @db.TinyText
  version                            String?    @db.TinyText
  machine_event_log_machineTomachine machine?   @relation("event_log_machineTomachine", fields: [machine], references: [id], onDelete: Cascade, map: "event_log_ibfk_1")
  arcade_event_log_arcadeToarcade    arcade?    @relation("event_log_arcadeToarcade", fields: [arcade], references: [id], onDelete: Cascade, map: "event_log_ibfk_2")
  aime_user                          aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "event_log_ibfk_3")

  @@index([arcade], map: "arcade")
  @@index([machine], map: "machine")
  @@index([user], map: "user")
}

model idac_profile {
  id                   Int       @id @default(autoincrement())
  user                 Int
  version              Int
  username             String?   @db.VarChar(8)
  country              Int?
  store                Int?
  team_id              Int?      @default(0)
  total_play           Int?      @default(0)
  daily_play           Int?      @default(0)
  day_play             Int?      @default(0)
  mileage              Int?      @default(0)
  asset_version        Int?      @default(1)
  last_play_date       DateTime? @default(now()) @db.Timestamp(0)
  mytitle_id           Int?      @default(0)
  mytitle_efffect_id   Int?      @default(0)
  sticker_id           Int?      @default(0)
  sticker_effect_id    Int?      @default(0)
  papercup_id          Int?      @default(0)
  tachometer_id        Int?      @default(0)
  aura_id              Int?      @default(0)
  aura_color_id        Int?      @default(0)
  aura_line_id         Int?      @default(0)
  bgm_id               Int?      @default(0)
  keyholder_id         Int?      @default(0)
  start_menu_bg_id     Int?      @default(0)
  use_car_id           Int?      @default(1)
  use_style_car_id     Int?      @default(1)
  bothwin_count        Int?      @default(0)
  bothwin_score        Int?      @default(0)
  subcard_count        Int?      @default(0)
  vs_history           Int?      @default(0)
  stamp_key_assign_0   Int?
  stamp_key_assign_1   Int?
  stamp_key_assign_2   Int?
  stamp_key_assign_3   Int?
  name_change_category Int?      @default(0)
  factory_disp         Int?      @default(0)
  create_date          DateTime? @default(now()) @db.Timestamp(0)
  cash                 Int?      @default(0)
  dressup_point        Int?      @default(0)
  avatar_point         Int?      @default(0)
  total_cash           Int?      @default(0)
  aime_user            aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_profile_ibfk_1")

  @@unique([user, version], map: "idac_profile_uk")
}

model idac_profile_avatar {
  id             Int       @id @default(autoincrement())
  user           Int       @unique(map: "idac_profile_avatar_uk")
  sex            Int?
  face           Int?
  eye            Int?
  mouth          Int?
  hair           Int?
  glasses        Int?
  face_accessory Int?
  body           Int?
  body_accessory Int?
  behind         Int?
  bg             Int?
  effect         Int?
  special        Int?
  aime_user      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_profile_avatar_ibfk_1")
}

model idac_profile_config {
  id                       Int       @id @default(autoincrement())
  user                     Int       @unique(map: "idac_profile_config_uk")
  config_id                Int?
  steering_intensity       Int?
  transmission_type        Int?
  default_viewpoint        Int?
  favorite_bgm             Int?
  bgm_volume               Int?
  se_volume                Int?
  master_volume            Int?
  store_battle_policy      Int?
  battle_onomatope_display Int?
  cornering_guide          Int?
  minimap                  Int?
  line_guide               Int?
  ghost                    Int?
  race_exit                Int?
  result_skip              Int?
  stamp_select_skip        Int?
  aime_user                aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_profile_config_ibfk_1")
}

model idac_profile_rank {
  id                              Int       @id @default(autoincrement())
  user                            Int
  version                         Int
  story_rank_exp                  Int?      @default(0)
  story_rank                      Int?      @default(1)
  time_trial_rank_exp             Int?      @default(0)
  time_trial_rank                 Int?      @default(1)
  online_battle_rank_exp          Int?      @default(0)
  online_battle_rank              Int?      @default(1)
  store_battle_rank_exp           Int?      @default(0)
  store_battle_rank               Int?      @default(1)
  theory_exp                      Int?      @default(0)
  theory_rank                     Int?      @default(1)
  pride_group_id                  Int?      @default(0)
  pride_point                     Int?      @default(0)
  grade_exp                       Int?      @default(0)
  grade                           Int?      @default(1)
  grade_reward_dist               Int?      @default(0)
  story_rank_reward_dist          Int?      @default(0)
  time_trial_rank_reward_dist     Int?      @default(0)
  online_battle_rank_reward_dist  Int?      @default(0)
  store_battle_rank_reward_dist   Int?      @default(0)
  theory_rank_reward_dist         Int?      @default(0)
  max_attained_online_battle_rank Int?      @default(1)
  max_attained_pride_point        Int?      @default(0)
  is_last_max                     Int?      @default(0)
  aime_user                       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_profile_rank_ibfk_1")

  @@unique([user, version], map: "idac_profile_rank_uk")
}

model idac_profile_stock {
  id                             Int       @id @default(autoincrement())
  user                           Int
  version                        Int
  mytitle_list                   String?   @default("") @db.VarChar(1024)
  mytitle_new_list               String?   @default("") @db.VarChar(1024)
  avatar_face_list               String?   @default("") @db.VarChar(255)
  avatar_face_new_list           String?   @default("") @db.VarChar(255)
  avatar_eye_list                String?   @default("") @db.VarChar(255)
  avatar_eye_new_list            String?   @default("") @db.VarChar(255)
  avatar_hair_list               String?   @default("") @db.VarChar(255)
  avatar_hair_new_list           String?   @default("") @db.VarChar(255)
  avatar_body_list               String?   @default("") @db.VarChar(255)
  avatar_body_new_list           String?   @default("") @db.VarChar(255)
  avatar_mouth_list              String?   @default("") @db.VarChar(255)
  avatar_mouth_new_list          String?   @default("") @db.VarChar(255)
  avatar_glasses_list            String?   @default("") @db.VarChar(255)
  avatar_glasses_new_list        String?   @default("") @db.VarChar(255)
  avatar_face_accessory_list     String?   @default("") @db.VarChar(255)
  avatar_face_accessory_new_list String?   @default("") @db.VarChar(255)
  avatar_body_accessory_list     String?   @default("") @db.VarChar(255)
  avatar_body_accessory_new_list String?   @default("") @db.VarChar(255)
  avatar_behind_list             String?   @default("") @db.VarChar(255)
  avatar_behind_new_list         String?   @default("") @db.VarChar(255)
  avatar_bg_list                 String?   @default("") @db.VarChar(255)
  avatar_bg_new_list             String?   @default("") @db.VarChar(255)
  avatar_effect_list             String?   @default("") @db.VarChar(255)
  avatar_effect_new_list         String?   @default("") @db.VarChar(255)
  avatar_special_list            String?   @default("") @db.VarChar(255)
  avatar_special_new_list        String?   @default("") @db.VarChar(255)
  stamp_list                     String?   @default("") @db.VarChar(255)
  stamp_new_list                 String?   @default("") @db.VarChar(255)
  keyholder_list                 String?   @default("") @db.VarChar(256)
  keyholder_new_list             String?   @default("") @db.VarChar(256)
  papercup_list                  String?   @default("") @db.VarChar(255)
  papercup_new_list              String?   @default("") @db.VarChar(255)
  tachometer_list                String?   @default("") @db.VarChar(255)
  tachometer_new_list            String?   @default("") @db.VarChar(255)
  aura_list                      String?   @default("") @db.VarChar(255)
  aura_new_list                  String?   @default("") @db.VarChar(255)
  aura_color_list                String?   @default("") @db.VarChar(255)
  aura_color_new_list            String?   @default("") @db.VarChar(255)
  aura_line_list                 String?   @default("") @db.VarChar(255)
  aura_line_new_list             String?   @default("") @db.VarChar(255)
  bgm_list                       String?   @default("") @db.VarChar(255)
  bgm_new_list                   String?   @default("") @db.VarChar(255)
  dx_color_list                  String?   @default("") @db.VarChar(255)
  dx_color_new_list              String?   @default("") @db.VarChar(255)
  start_menu_bg_list             String?   @default("") @db.VarChar(255)
  start_menu_bg_new_list         String?   @default("") @db.VarChar(255)
  under_neon_list                String?   @default("") @db.VarChar(255)
  aime_user                      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_profile_stock_ibfk_1")

  @@unique([user, version], map: "idac_profile_stock_uk")
}

model idac_profile_theory {
  id                     Int       @id @default(autoincrement())
  user                   Int
  version                Int
  play_count             Int?      @default(0)
  play_count_multi       Int?      @default(0)
  partner_id             Int?
  partner_progress       Int?
  partner_progress_score Int?
  practice_start_rank    Int?      @default(0)
  general_flag           Int?      @default(0)
  vs_history             Int?      @default(0)
  vs_history_multi       Int?      @default(0)
  win_count              Int?      @default(0)
  win_count_multi        Int?      @default(0)
  aime_user              aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_profile_theory_ibfk_1")

  @@unique([user, version], map: "idac_profile_theory_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model idac_user_car {
  id                    Int        @id @default(autoincrement())
  user                  Int?
  version               Int
  car_id                Int?
  style_car_id          Int?
  color                 Int?
  bureau                Int?
  kana                  Int?
  s_no                  Int?
  l_no                  Int?
  car_flag              Int?
  tune_point            Int?
  tune_level            Int?       @default(1)
  tune_parts            Int?
  infinity_tune         Int?       @default(0)
  online_vs_win         Int?       @default(0)
  pickup_seq            Int?       @default(1)
  purchase_seq          Int?       @default(1)
  color_stock_list      String?    @db.VarChar(32)
  color_stock_new_list  String?    @db.VarChar(32)
  parts_stock_list      String?    @db.VarChar(48)
  parts_stock_new_list  String?    @db.VarChar(48)
  parts_set_equip_list  String?    @db.VarChar(48)
  parts_list            String?    @db.LongText
  equip_parts_count     Int?       @default(0)
  total_car_parts_count Int?       @default(0)
  use_count             Int?       @default(0)
  story_use_count       Int?       @default(0)
  timetrial_use_count   Int?       @default(0)
  vs_use_count          Int?       @default(0)
  net_vs_use_count      Int?       @default(0)
  theory_use_count      Int?       @default(0)
  car_mileage           Int?       @default(0)
  aime_user             aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_car_ibfk_1")

  @@unique([user, version, style_car_id], map: "idac_user_car_uk")
}

model idac_user_challenge {
  id                    Int        @id @default(autoincrement())
  user                  Int?
  vs_type               Int?
  play_difficulty       Int?
  cleared_difficulty    Int?
  story_type            Int?
  play_count            Int?       @default(1)
  weak_difficulty       Int?       @default(0)
  eval_id               Int?
  advantage             Int?
  sec1_advantage_avg    Int?
  sec2_advantage_avg    Int?
  sec3_advantage_avg    Int?
  sec4_advantage_avg    Int?
  nearby_advantage_rate Int?
  win_flag              Int?
  result                Int?
  record                Int?
  course_id             Int?
  last_play_course_id   Int?
  style_car_id          Int?
  course_day            Int?
  aime_user             aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_challenge_ibfk_1")

  @@unique([user, vs_type, play_difficulty], map: "idac_user_challenge_uk")
}

model idac_user_course {
  id              Int        @id @default(autoincrement())
  user            Int?
  course_id       Int?
  run_counts      Int?       @default(1)
  skill_level_exp Int?       @default(0)
  aime_user       aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_course_ibfk_1")

  @@unique([user, course_id], map: "idac_user_course_uk")
}

model idac_user_stamp {
  id                             Int       @id @default(autoincrement())
  user                           Int
  m_stamp_event_id               Int?
  select_flag                    Int?
  stamp_masu                     Int?
  daily_bonus                    Int?
  weekly_bonus                   Int?
  weekday_bonus                  Int?
  weekend_bonus                  Int?
  total_bonus                    Int?
  day_total_bonus                Int?
  store_battle_bonus             Int?
  story_bonus                    Int?
  online_battle_bonus            Int?
  timetrial_bonus                Int?
  fasteststreetlegaltheory_bonus Int?
  collaboration_bonus            Int?
  add_bonus_daily_flag_1         Int?
  add_bonus_daily_flag_2         Int?
  add_bonus_daily_flag_3         Int?
  create_date_daily              DateTime? @default(now()) @db.Timestamp(0)
  create_date_weekly             DateTime? @default(now()) @db.Timestamp(0)
  aime_user                      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_stamp_ibfk_1")

  @@unique([user, m_stamp_event_id], map: "idac_user_stamp_uk")
}

model idac_user_story {
  id         Int        @id @default(autoincrement())
  user       Int?
  story_type Int?
  chapter    Int?
  loop_count Int?       @default(1)
  aime_user  aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_story_ibfk_1")

  @@unique([user, chapter], map: "idac_user_story_uk")
}

model idac_user_story_episode {
  id          Int        @id @default(autoincrement())
  user        Int?
  chapter     Int?
  episode     Int?
  play_status Int?
  aime_user   aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_story_episode_ibfk_1")

  @@unique([user, chapter, episode], map: "idac_user_story_episode_uk")
}

model idac_user_story_episode_difficulty {
  id          Int        @id @default(autoincrement())
  user        Int?
  episode     Int?
  difficulty  Int?
  play_count  Int?
  clear_count Int?
  play_status Int?
  play_score  Int?
  aime_user   aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_story_episode_difficulty_ibfk_1")

  @@unique([user, episode, difficulty], map: "idac_user_story_episode_difficulty_uk")
}

model idac_user_theory_course {
  id                   Int        @id @default(autoincrement())
  user                 Int?
  course_id            Int?
  max_victory_grade    Int?       @default(0)
  run_count            Int?       @default(1)
  powerhouse_lv        Int?
  powerhouse_exp       Int?
  played_powerhouse_lv Int?
  update_dt            DateTime?  @default(now()) @db.Timestamp(0)
  aime_user            aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_theory_course_ibfk_1")

  @@unique([user, course_id], map: "idac_user_theory_course_uk")
}

model idac_user_theory_partner {
  id             Int        @id @default(autoincrement())
  user           Int?
  partner_id     Int?
  fellowship_lv  Int?
  fellowship_exp Int?
  aime_user      aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_theory_partner_ibfk_1")

  @@unique([user, partner_id], map: "idac_user_theory_partner_uk")
}

model idac_user_theory_running {
  id         Int        @id @default(autoincrement())
  user       Int?
  course_id  Int?
  attack     Int?
  defense    Int?
  safety     Int?
  runaway    Int?
  trick_flag Int?
  aime_user  aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_theory_running_ibfk_1")

  @@unique([user, course_id], map: "idac_user_theory_running_uk")
}

model idac_user_ticket {
  id         Int        @id @default(autoincrement())
  user       Int?
  ticket_id  Int?
  ticket_cnt Int?
  aime_user  aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_ticket_ibfk_1")

  @@unique([user, ticket_id], map: "idac_user_ticket_uk")
}

model idac_user_time_trial {
  id             Int        @id @default(autoincrement())
  user           Int?
  version        Int
  style_car_id   Int?
  course_id      Int?
  eval_id        Int?       @default(0)
  goal_time      Int?
  section_time_1 Int?
  section_time_2 Int?
  section_time_3 Int?
  section_time_4 Int?
  mission        Int?
  play_dt        DateTime?  @default(now()) @db.Timestamp(0)
  aime_user      aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_time_trial_ibfk_1")

  @@unique([user, version, course_id, style_car_id], map: "idac_user_time_trial_uk")
}

model idac_user_timetrial_event {
  id                 Int       @id @default(autoincrement())
  user               Int
  timetrial_event_id Int?
  point              Int?
  aime_user          aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_timetrial_event_ibfk_1")

  @@unique([user, timetrial_event_id], map: "idac_user_timetrial_event_uk")
}

model idac_user_vs_info {
  id                   Int        @id @default(autoincrement())
  user                 Int?
  group_key            String?    @db.VarChar(25)
  win_flg              Int?
  style_car_id         Int?
  course_id            Int?
  course_day           Int?
  players_num          Int?
  winning              Int?
  advantage_1          Int?
  advantage_2          Int?
  advantage_3          Int?
  advantage_4          Int?
  select_course_id     Int?
  select_course_day    Int?
  select_course_random Int?
  matching_success_sec Int?
  boost_flag           Int?
  vs_history           Int?
  break_count          Int?
  break_penalty_flag   Int?
  aime_user            aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "idac_user_vs_info_ibfk_1")

  @@unique([user, group_key], map: "idac_user_vs_info_uk")
}

model machine {
  id                                   Int         @id @default(autoincrement())
  arcade                               Int
  serial                               String      @db.VarChar(15)
  board                                String?     @db.VarChar(15)
  game                                 String?     @db.VarChar(4)
  country                              String?     @db.VarChar(3)
  timezone                             String?     @db.VarChar(255)
  ota_enable                           Boolean?
  memo                                 String?     @db.VarChar(255)
  is_cab                               Boolean?
  data                                 String?     @db.LongText
  event_log_event_log_machineTomachine event_log[] @relation("event_log_machineTomachine")
  arcade_machine_arcadeToarcade        arcade      @relation("machine_arcadeToarcade", fields: [arcade], references: [id], onDelete: Cascade, map: "machine_ibfk_1")

  @@index([arcade], map: "arcade")
}

model mai2_item_card {
  id         Int       @id @default(autoincrement())
  user       Int
  cardId     Int?
  cardTypeId Int?
  charaId    Int?
  mapId      Int?
  startDate  DateTime? @default(now()) @db.Timestamp(0)
  endDate    DateTime? @db.Timestamp(0)
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_card_ibfk_1")

  @@unique([user, cardId, cardTypeId], map: "mai2_item_card_uk")
}

model mai2_item_character {
  id          Int       @id @default(autoincrement())
  user        Int
  characterId Int?
  level       Int?
  awakening   Int?
  useCount    Int?
  point       Int?
  aime_user   aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_character_ibfk_1")

  @@unique([user, characterId], map: "mai2_item_character_uk")
}

model mai2_item_charge {
  id           Int       @id @default(autoincrement())
  user         Int
  chargeId     Int?
  stock        Int?
  purchaseDate String?   @db.VarChar(255)
  validDate    String?   @db.VarChar(255)
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_charge_ibfk_1")

  @@unique([user, chargeId], map: "mai2_item_charge_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model mai2_item_favorite {
  id         Int       @id @default(autoincrement())
  user       Int
  itemKind   Int?
  itemIdList String?   @db.LongText
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_favorite_ibfk_1")

  @@unique([user, itemKind], map: "mai2_item_favorite_uk")
}

model mai2_item_friend_season_ranking {
  id         Int       @id @default(autoincrement())
  user       Int
  seasonId   Int?
  point      Int?
  rank       Int?
  rewardGet  Boolean?
  userName   String?   @db.VarChar(8)
  recordDate DateTime? @db.Timestamp(0)
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_friend_season_ranking_ibfk_1")

  @@unique([user, seasonId, userName], map: "mai2_item_friend_season_ranking_uk")
}

model mai2_item_item {
  id        Int       @id @default(autoincrement())
  user      Int
  itemId    Int?
  itemKind  Int?
  stock     Int?
  isValid   Boolean?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_item_ibfk_1")

  @@unique([user, itemId, itemKind], map: "mai2_item_item_uk")
}

model mai2_item_login_bonus {
  id         Int       @id @default(autoincrement())
  user       Int
  bonusId    Int?
  point      Int?
  isCurrent  Boolean?
  isComplete Boolean?
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_login_bonus_ibfk_1")

  @@unique([user, bonusId], map: "mai2_item_login_bonus_uk")
}

model mai2_item_map {
  id         Int       @id @default(autoincrement())
  user       Int
  mapId      Int?
  distance   Int?
  isLock     Boolean?
  isClear    Boolean?
  isComplete Boolean?
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_map_ibfk_1")

  @@unique([user, mapId], map: "mai2_item_map_uk")
}

model mai2_item_print_detail {
  id              Int       @id @default(autoincrement())
  user            Int
  orderId         Int?
  printNumber     Int?
  printDate       DateTime? @default(now()) @db.Timestamp(0)
  serialId        String?   @db.VarChar(20)
  placeId         Int?
  clientId        String?   @db.VarChar(11)
  printerSerialId String?   @db.VarChar(20)
  cardRomVersion  Int?
  isHolograph     Boolean?  @default(true)
  printOption1    Boolean?  @default(false)
  printOption2    Boolean?  @default(false)
  printOption3    Boolean?  @default(false)
  printOption4    Boolean?  @default(false)
  printOption5    Boolean?  @default(false)
  printOption6    Boolean?  @default(false)
  printOption7    Boolean?  @default(false)
  printOption8    Boolean?  @default(false)
  printOption9    Boolean?  @default(false)
  printOption10   Boolean?  @default(false)
  created         String?   @default("") @db.VarChar(255)
  aime_user       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_print_detail_ibfk_1")

  @@unique([user, serialId], map: "mai2_item_print_detail_uk")
}

model mai2_playlog {
  id                    Int       @id @default(autoincrement())
  user                  Int
  userId                BigInt?
  orderId               Int?
  playlogId             BigInt?
  version               Int?
  placeId               Int?
  placeName             String?   @db.VarChar(255)
  loginDate             BigInt?
  playDate              String?   @db.VarChar(255)
  userPlayDate          String?   @db.VarChar(255)
  type                  Int?
  musicId               Int?
  level                 Int?
  trackNo               Int?
  vsMode                Int?
  vsUserName            String?   @db.VarChar(255)
  vsStatus              Int?
  vsUserRating          Int?
  vsUserAchievement     Int?
  vsUserGradeRank       Int?
  vsRank                Int?
  playerNum             Int?
  playedUserId1         BigInt?
  playedUserName1       String?   @db.VarChar(255)
  playedMusicLevel1     Int?
  playedUserId2         BigInt?
  playedUserName2       String?   @db.VarChar(255)
  playedMusicLevel2     Int?
  playedUserId3         BigInt?
  playedUserName3       String?   @db.VarChar(255)
  playedMusicLevel3     Int?
  characterId1          Int?
  characterLevel1       Int?
  characterAwakening1   Int?
  characterId2          Int?
  characterLevel2       Int?
  characterAwakening2   Int?
  characterId3          Int?
  characterLevel3       Int?
  characterAwakening3   Int?
  characterId4          Int?
  characterLevel4       Int?
  characterAwakening4   Int?
  characterId5          Int?
  characterLevel5       Int?
  characterAwakening5   Int?
  achievement           Int?
  deluxscore            Int?
  scoreRank             Int?
  maxCombo              Int?
  totalCombo            Int?
  maxSync               Int?
  totalSync             Int?
  tapCriticalPerfect    Int?
  tapPerfect            Int?
  tapGreat              Int?
  tapGood               Int?
  tapMiss               Int?
  holdCriticalPerfect   Int?
  holdPerfect           Int?
  holdGreat             Int?
  holdGood              Int?
  holdMiss              Int?
  slideCriticalPerfect  Int?
  slidePerfect          Int?
  slideGreat            Int?
  slideGood             Int?
  slideMiss             Int?
  touchCriticalPerfect  Int?
  touchPerfect          Int?
  touchGreat            Int?
  touchGood             Int?
  touchMiss             Int?
  breakCriticalPerfect  Int?
  breakPerfect          Int?
  breakGreat            Int?
  breakGood             Int?
  breakMiss             Int?
  isTap                 Boolean?
  isHold                Boolean?
  isSlide               Boolean?
  isTouch               Boolean?
  isBreak               Boolean?
  isCriticalDisp        Boolean?
  isFastLateDisp        Boolean?
  fastCount             Int?
  lateCount             Int?
  isAchieveNewRecord    Boolean?
  isDeluxscoreNewRecord Boolean?
  comboStatus           Int?
  syncStatus            Int?
  isClear               Boolean?
  beforeRating          Int?
  afterRating           Int?
  beforeGrade           Int?
  afterGrade            Int?
  afterGradeRank        Int?
  beforeDeluxRating     Int?
  afterDeluxRating      Int?
  isPlayTutorial        Boolean?
  isEventMode           Boolean?
  isFreedomMode         Boolean?
  playMode              Int?
  isNewFree             Boolean?
  extNum1               Int?
  extNum2               Int?
  extNum4               Int?      @default(0)
  extBool1              Boolean?
  trialPlayAchievement  Int?
  aime_user             aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_playlog_ibfk_1")

  @@index([user], map: "user")
}

model mai2_profile_activity {
  id         Int       @id @default(autoincrement())
  user       Int
  kind       Int?
  activityId Int?
  param1     Int?
  param2     Int?
  param3     Int?
  param4     Int?
  sortNumber Int?
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_profile_activity_ibfk_1")

  @@unique([user, kind, activityId], map: "mai2_profile_activity_uk")
}

model mai2_profile_consec_logins {
  id        Int       @id @default(autoincrement())
  user      Int
  version   Int
  logins    Int?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_profile_consec_logins_ibfk_1")

  @@unique([user, version], map: "mai2_profile_consec_logins_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model mai2_profile_detail {
  id                       Int       @id @default(autoincrement())
  user                     Int
  version                  Int
  userName                 String?   @db.VarChar(25)
  isNetMember              Int?
  iconId                   Int?
  plateId                  Int?
  titleId                  Int?
  partnerId                Int?
  frameId                  Int?
  selectMapId              Int?
  totalAwake               Int?
  gradeRating              Int?
  musicRating              Int?
  playerRating             Int?
  highestRating            Int?
  gradeRank                Int?
  classRank                Int?
  courseRank               Int?
  charaSlot                String?   @db.LongText
  charaLockSlot            String?   @db.LongText
  contentBit               BigInt?
  playCount                Int?
  currentPlayCount         Int?
  renameCredit             Int?
  mapStock                 Int?
  eventWatchedDate         String?   @db.VarChar(25)
  lastGameId               String?   @db.VarChar(25)
  lastRomVersion           String?   @db.VarChar(25)
  lastDataVersion          String?   @db.VarChar(25)
  lastLoginDate            String?   @db.VarChar(25)
  lastPairLoginDate        String?   @db.VarChar(25)
  lastPlayDate             String?   @db.VarChar(25)
  lastTrialPlayDate        String?   @db.VarChar(25)
  lastPlayCredit           Int?
  lastPlayMode             Int?
  lastPlaceId              Int?
  lastPlaceName            String?   @db.VarChar(25)
  lastAllNetId             Int?
  lastRegionId             Int?
  lastRegionName           String?   @db.VarChar(25)
  lastClientId             String?   @db.VarChar(25)
  lastCountryCode          String?   @db.VarChar(25)
  lastSelectEMoney         Int?
  lastSelectTicket         Int?
  lastSelectCourse         Int?
  lastCountCourse          Int?
  firstGameId              String?   @db.VarChar(25)
  firstRomVersion          String?   @db.VarChar(25)
  firstDataVersion         String?   @db.VarChar(25)
  firstPlayDate            String?   @db.VarChar(25)
  compatibleCmVersion      String?   @db.VarChar(25)
  dailyBonusDate           String?   @db.VarChar(25)
  dailyCourseBonusDate     String?   @db.VarChar(25)
  playVsCount              Int?
  playSyncCount            Int?
  winCount                 Int?
  helpCount                Int?
  comboCount               Int?
  totalDeluxscore          BigInt?
  totalBasicDeluxscore     BigInt?
  totalAdvancedDeluxscore  BigInt?
  totalExpertDeluxscore    BigInt?
  totalMasterDeluxscore    BigInt?
  totalReMasterDeluxscore  BigInt?
  totalSync                Int?
  totalBasicSync           Int?
  totalAdvancedSync        Int?
  totalExpertSync          Int?
  totalMasterSync          Int?
  totalReMasterSync        Int?
  totalAchievement         BigInt?
  totalBasicAchievement    BigInt?
  totalAdvancedAchievement BigInt?
  totalExpertAchievement   BigInt?
  totalMasterAchievement   BigInt?
  totalReMasterAchievement BigInt?
  playerOldRating          BigInt?
  playerNewRating          BigInt?
  dateTime                 BigInt?
  banState                 Int?
  point                    Int?
  totalPoint               Int?
  friendRegistSkip         Int?      @db.SmallInt
  aime_user                aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_profile_detail_ibfk_1")

  @@unique([user, version], map: "mai2_profile_detail_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model mai2_profile_extend {
  id                        Int       @id @default(autoincrement())
  user                      Int
  version                   Int
  selectMusicId             Int?
  selectDifficultyId        Int?
  categoryIndex             Int?
  musicIndex                Int?
  extraFlag                 Int?
  selectScoreType           Int?
  extendContentBit          BigInt?
  isPhotoAgree              Boolean?
  isGotoCodeRead            Boolean?
  selectResultDetails       Boolean?
  selectResultScoreViewType Int?
  sortCategorySetting       Int?
  sortMusicSetting          Int?
  selectedCardList          String?   @db.LongText
  encountMapNpcList         String?   @db.LongText
  playStatusSetting         Int?      @default(0)
  aime_user                 aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_profile_extend_ibfk_1")

  @@unique([user, version], map: "mai2_profile_extend_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model mai2_profile_ghost {
  id            Int       @id @default(autoincrement())
  user          Int
  version_int   Int
  name          String?   @db.VarChar(25)
  iconId        Int?
  plateId       Int?
  titleId       Int?
  rate          Int?
  udemaeRate    Int?
  courseRank    Int?
  classRank     Int?
  classValue    Int?
  playDatetime  String?   @db.VarChar(25)
  shopId        Int?
  regionCode    Int?
  typeId        Int?
  musicId       Int?
  difficulty    Int?
  version       Int?
  resultBitList String?   @db.LongText
  resultNum     Int?
  achievement   Int?
  aime_user     aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_profile_ghost_ibfk_1")

  @@unique([user, version, musicId, difficulty], map: "mai2_profile_ghost_uk")
}

model mai2_profile_option {
  id                  Int       @id @default(autoincrement())
  user                Int
  version             Int
  selectMusicId       Int?
  optionKind          Int?
  noteSpeed           Int?
  slideSpeed          Int?
  touchSpeed          Int?
  tapDesign           Int?
  tapSe               Int?      @default(0)
  holdDesign          Int?
  slideDesign         Int?
  starType            Int?
  outlineDesign       Int?
  noteSize            Int?
  slideSize           Int?
  touchSize           Int?
  starRotate          Int?
  dispCenter          Int?
  outFrameType        Int?
  dispChain           Int?
  dispRate            Int?
  dispBar             Int?
  touchEffect         Int?
  submonitorAnimation Int?
  submonitorAchive    Int?
  submonitorAppeal    Int?
  matching            Int?
  trackSkip           Int?
  brightness          Int?
  mirrorMode          Int?
  dispJudge           Int?
  dispJudgePos        Int?
  dispJudgeTouchPos   Int?
  adjustTiming        Int?
  judgeTiming         Int?
  ansVolume           Int?
  tapHoldVolume       Int?
  criticalSe          Int?
  breakSe             Int?
  breakVolume         Int?
  exSe                Int?
  exVolume            Int?
  slideSe             Int?
  slideVolume         Int?
  breakSlideVolume    Int?
  touchVolume         Int?
  touchHoldVolume     Int?
  damageSeVolume      Int?
  headPhoneVolume     Int?
  sortTab             Int?
  sortMusic           Int?
  aime_user           aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_profile_option_ibfk_1")

  @@unique([user, version], map: "mai2_profile_option_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model mai2_profile_rating {
  id                Int       @id @default(autoincrement())
  user              Int
  version           Int
  rating            Int?
  ratingList        String?   @db.LongText
  newRatingList     String?   @db.LongText
  nextRatingList    String?   @db.LongText
  nextNewRatingList String?   @db.LongText
  udemae            String?   @db.LongText
  aime_user         aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_profile_rating_ibfk_1")

  @@unique([user, version], map: "mai2_profile_rating_uk")
}

model mai2_profile_region {
  id        Int       @id @default(autoincrement())
  user      Int
  regionId  Int?
  playCount Int?      @default(1)
  created   String?   @db.VarChar(25)
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_profile_region_ibfk_1")

  @@unique([user, regionId], map: "mai2_profile_region_uk")
}

model mai2_score_best {
  id            Int       @id @default(autoincrement())
  user          Int
  musicId       Int?
  level         Int?
  playCount     Int?
  achievement   Int?
  comboStatus   Int?
  syncStatus    Int?
  deluxscoreMax Int?
  scoreRank     Int?
  extNum1       Int?      @default(0)
  aime_user     aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_score_best_ibfk_1")

  @@unique([user, musicId, level], map: "mai2_score_best_uk")
}

model mai2_score_course {
  id                  Int       @id @default(autoincrement())
  user                Int
  courseId            Int?
  isLastClear         Boolean?
  totalRestlife       Int?
  totalAchievement    Int?
  totalDeluxscore     Int?
  playCount           Int?
  clearDate           String?   @db.VarChar(25)
  lastPlayDate        String?   @db.VarChar(25)
  bestAchievement     Int?
  bestAchievementDate String?   @db.VarChar(25)
  bestDeluxscore      Int?
  bestDeluxscoreDate  String?   @db.VarChar(25)
  aime_user           aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_score_course_ibfk_1")

  @@unique([user, courseId], map: "mai2_score_best_uk")
}

model mai2_static_cards {
  id              Int       @id @default(autoincrement())
  version         Int
  cardId          Int
  cardName        String    @db.VarChar(255)
  startDate       DateTime? @default(dbgenerated("('2017-12-31 19:00:00')")) @db.Timestamp(0)
  endDate         DateTime? @default(dbgenerated("('2037-12-31 19:00:00')")) @db.Timestamp(0)
  noticeStartDate DateTime? @default(dbgenerated("('2017-12-31 19:00:00')")) @db.Timestamp(0)
  noticeEndDate   DateTime? @default(dbgenerated("('2037-12-31 19:00:00')")) @db.Timestamp(0)
  enabled         Boolean?  @default(true)

  @@unique([version, cardId, cardName], map: "mai2_static_cards_uk")
}

model mai2_static_event {
  id        Int       @id @default(autoincrement())
  version   Int
  eventId   Int?
  type      Int?
  name      String?   @db.VarChar(255)
  startDate DateTime? @default(now()) @db.Timestamp(0)
  enabled   Boolean?  @default(true)

  @@unique([version, eventId, type], map: "mai2_static_event_uk")
}

model mai2_static_music {
  id           Int     @id @default(autoincrement())
  version      Int
  songId       Int?
  chartId      Int?
  title        String? @db.VarChar(255)
  artist       String? @db.VarChar(255)
  genre        String? @db.VarChar(255)
  bpm          Int?
  addedVersion String? @db.VarChar(255)
  difficulty   Float?  @db.Float
  noteDesigner String? @db.VarChar(255)

  @@unique([songId, chartId, version], map: "mai2_static_music_uk")
}

model mai2_static_ticket {
  id       Int      @id @default(autoincrement())
  version  Int
  ticketId Int?
  kind     Int?
  name     String?  @db.VarChar(255)
  price    Int?     @default(1)
  enabled  Boolean? @default(true)

  @@unique([version, ticketId], map: "mai2_static_ticket_uk")
}

model maimai_playlog {
  id                Int       @id @default(autoincrement())
  user              Int
  version           Int?
  orderId           Int?
  sortNumber        Int?
  placeId           Int?
  placeName         String?   @db.VarChar(255)
  country           String?   @db.VarChar(255)
  regionId          Int?
  playDate          String?   @db.VarChar(255)
  userPlayDate      String?   @db.VarChar(255)
  musicId           Int?
  level             Int?
  gameMode          Int?
  rivalNum          Int?
  track             Int?
  eventId           Int?
  isFreeToPlay      Boolean?
  playerRating      Int?
  playedUserId1     Int?
  playedUserId2     Int?
  playedUserId3     Int?
  playedUserName1   String?   @db.VarChar(255)
  playedUserName2   String?   @db.VarChar(255)
  playedUserName3   String?   @db.VarChar(255)
  playedMusicLevel1 Int?
  playedMusicLevel2 Int?
  playedMusicLevel3 Int?
  achievement       Int?
  score             Int?
  tapScore          Int?
  holdScore         Int?
  slideScore        Int?
  breakScore        Int?
  syncRate          Int?
  vsWin             Int?
  isAllPerfect      Boolean?
  fullCombo         Int?
  maxFever          Int?
  maxCombo          Int?
  tapPerfect        Int?
  tapGreat          Int?
  tapGood           Int?
  tapBad            Int?
  holdPerfect       Int?
  holdGreat         Int?
  holdGood          Int?
  holdBad           Int?
  slidePerfect      Int?
  slideGreat        Int?
  slideGood         Int?
  slideBad          Int?
  breakPerfect      Int?
  breakGreat        Int?
  breakGood         Int?
  breakBad          Int?
  judgeStyle        Int?
  isTrackSkip       Boolean?
  isHighScore       Boolean?
  isChallengeTrack  Boolean?
  challengeLife     Int?
  challengeRemain   Int?
  isAllPerfectPlus  Int?
  aime_user         aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "maimai_playlog_ibfk_1")

  @@index([user], map: "user")
}

model maimai_profile_boss {
  id               Int       @id @default(autoincrement())
  user             Int       @unique(map: "mai2_profile_boss_uk")
  pandoraFlagList0 Int?
  pandoraFlagList1 Int?
  pandoraFlagList2 Int?
  pandoraFlagList3 Int?
  pandoraFlagList4 Int?
  pandoraFlagList5 Int?
  pandoraFlagList6 Int?
  emblemFlagList   Int?
  aime_user        aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "maimai_profile_boss_ibfk_1")
}

model maimai_profile_detail {
  id                     Int       @id @default(autoincrement())
  user                   Int
  version                Int
  lastDataVersion        Int?
  userName               String?   @db.VarChar(8)
  point                  Int?
  totalPoint             Int?
  iconId                 Int?
  nameplateId            Int?
  frameId                Int?
  trophyId               Int?
  playCount              Int?
  playVsCount            Int?
  playSyncCount          Int?
  winCount               Int?
  helpCount              Int?
  comboCount             Int?
  feverCount             Int?
  totalHiScore           Int?
  totalEasyHighScore     Int?
  totalBasicHighScore    Int?
  totalAdvancedHighScore Int?
  totalExpertHighScore   Int?
  totalMasterHighScore   Int?
  totalReMasterHighScore Int?
  totalHighSync          Int?
  totalEasySync          Int?
  totalBasicSync         Int?
  totalAdvancedSync      Int?
  totalExpertSync        Int?
  totalMasterSync        Int?
  totalReMasterSync      Int?
  playerRating           Int?
  highestRating          Int?
  rankAuthTailId         Int?
  eventWatchedDate       String?   @db.VarChar(255)
  webLimitDate           String?   @db.VarChar(255)
  challengeTrackPhase    Int?
  firstPlayBits          Int?
  lastPlayDate           String?   @db.VarChar(255)
  lastPlaceId            Int?
  lastPlaceName          String?   @db.VarChar(255)
  lastRegionId           Int?
  lastRegionName         String?   @db.VarChar(255)
  lastClientId           String?   @db.VarChar(255)
  lastCountryCode        String?   @db.VarChar(255)
  eventPoint             Int?
  totalLv                Int?
  lastLoginBonusDay      Int?
  lastSurvivalBonusDay   Int?
  loginBonusLv           Int?
  aime_user              aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "maimai_profile_detail_ibfk_1")

  @@unique([user, version], map: "maimai_profile_detail_uk")
}

model maimai_profile_grade_status {
  id            Int       @id @default(autoincrement())
  user          Int
  gradeVersion  Int?
  gradeLevel    Int?
  gradeSubLevel Int?
  gradeMaxId    Int?
  aime_user     aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "maimai_profile_grade_status_ibfk_1")

  @@unique([user, gradeVersion], map: "maimai_profile_grade_status_uk")
}

model maimai_profile_option {
  id                  Int       @id @default(autoincrement())
  user                Int
  version             Int
  soudEffect          Int?
  mirrorMode          Int?
  guideSpeed          Int?
  bgInfo              Int?
  brightness          Int?
  isStarRot           Int?
  breakSe             Int?
  slideSe             Int?
  hardJudge           Int?
  isTagJump           Int?
  breakSeVol          Int?
  slideSeVol          Int?
  isUpperDisp         Int?
  trackSkip           Int?
  optionMode          Int?
  simpleOptionParam   Int?
  adjustTiming        Int?
  dispTiming          Int?
  timingPos           Int?
  ansVol              Int?
  noteVol             Int?
  dmgVol              Int?
  appealFlame         Int?
  isFeverDisp         Int?
  dispJudge           Int?
  judgePos            Int?
  ratingGuard         Int?
  selectChara         Int?
  sortType            Int?
  filterGenre         Int?
  filterLevel         Int?
  filterRank          Int?
  filterVersion       Int?
  filterRec           Int?
  filterFullCombo     Int?
  filterAllPerfect    Int?
  filterDifficulty    Int?
  filterFullSync      Int?
  filterReMaster      Int?
  filterMaxFever      Int?
  finalSelectId       Int?
  finalSelectCategory Int?
  aime_user           aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "maimai_profile_option_ibfk_1")

  @@unique([user, version], map: "maimai_profile_option_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model maimai_profile_recent_rating {
  id                   Int       @id @default(autoincrement())
  user                 Int       @unique(map: "mai2_profile_recent_rating_uk")
  userRecentRatingList String?   @db.LongText
  aime_user            aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "maimai_profile_recent_rating_ibfk_1")
}

model maimai_profile_web_option {
  id             Int       @id @default(autoincrement())
  user           Int
  version        Int
  isNetMember    Boolean?
  dispRate       Int?
  dispJudgeStyle Int?
  dispRank       Int?
  dispHomeRanker Int?
  dispTotalLv    Int?
  aime_user      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "maimai_profile_web_option_ibfk_1")

  @@unique([user, version], map: "maimai_profile_web_option_uk")
}

model maimai_score_best {
  id               Int       @id @default(autoincrement())
  user             Int
  musicId          Int?
  level            Int?
  playCount        Int?
  achievement      Int?
  scoreMax         Int?
  syncRateMax      Int?
  isAllPerfect     Boolean?
  isAllPerfectPlus Int?
  fullCombo        Int?
  maxFever         Int?
  aime_user        aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "maimai_score_best_ibfk_1")

  @@unique([user, musicId, level], map: "maimai_score_best_uk")
}

model ongeki_gp_log {
  id         Int        @id @default(autoincrement())
  user       Int?
  usedCredit Int?
  placeName  String?    @db.VarChar(255)
  trxnDate   String?    @db.VarChar(255)
  placeId    Int?
  kind       Int?
  pattern    Int?
  currentGP  Int?
  aime_user  aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_gp_log_ibfk_1")

  @@index([user], map: "user")
}

model ongeki_profile_activity {
  id         Int       @id @default(autoincrement())
  user       Int
  kind       Int?
  activityId Int?
  sortNumber Int?
  param1     Int?
  param2     Int?
  param3     Int?
  param4     Int?
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_activity_ibfk_1")

  @@unique([user, kind, activityId], map: "ongeki_profile_activity_uk")
}

model ongeki_profile_data {
  id                           Int       @id @default(autoincrement())
  user                         Int
  version                      Int
  userName                     String?   @db.VarChar(8)
  level                        Int?
  reincarnationNum             Int?
  exp                          Int?
  point                        Int?
  totalPoint                   Int?
  playCount                    Int?
  jewelCount                   Int?
  totalJewelCount              Int?
  medalCount                   Int?
  playerRating                 Int?
  highestRating                Int?
  battlePoint                  Int?
  nameplateId                  Int?
  trophyId                     Int?
  cardId                       Int?
  characterId                  Int?
  characterVoiceNo             Int?
  tabSetting                   Int?
  tabSortSetting               Int?
  cardCategorySetting          Int?
  cardSortSetting              Int?
  playedTutorialBit            Int?
  firstTutorialCancelNum       Int?
  sumTechHighScore             BigInt?
  sumTechBasicHighScore        BigInt?
  sumTechAdvancedHighScore     BigInt?
  sumTechExpertHighScore       BigInt?
  sumTechMasterHighScore       BigInt?
  sumTechLunaticHighScore      BigInt?
  sumBattleHighScore           BigInt?
  sumBattleBasicHighScore      BigInt?
  sumBattleAdvancedHighScore   BigInt?
  sumBattleExpertHighScore     BigInt?
  sumBattleMasterHighScore     BigInt?
  sumBattleLunaticHighScore    BigInt?
  eventWatchedDate             String?   @db.VarChar(255)
  cmEventWatchedDate           String?   @db.VarChar(255)
  firstGameId                  String?   @db.VarChar(8)
  firstRomVersion              String?   @db.VarChar(8)
  firstDataVersion             String?   @db.VarChar(8)
  firstPlayDate                String?   @db.VarChar(255)
  lastGameId                   String?   @db.VarChar(8)
  lastRomVersion               String?   @db.VarChar(8)
  lastDataVersion              String?   @db.VarChar(8)
  compatibleCmVersion          String?   @db.VarChar(8)
  lastPlayDate                 String?   @db.VarChar(255)
  lastPlaceId                  Int?
  lastPlaceName                String?   @db.VarChar(255)
  lastRegionId                 Int?
  lastRegionName               String?   @db.VarChar(255)
  lastAllNetId                 Int?
  lastClientId                 String?   @db.VarChar(16)
  lastUsedDeckId               Int?
  lastPlayMusicLevel           Int?
  banStatus                    Int?      @default(0)
  rivalScoreCategorySetting    Int?      @default(0)
  overDamageBattlePoint        Int?      @default(0)
  bestBattlePoint              Int?      @default(0)
  lastEmoneyBrand              Int?      @default(0)
  lastEmoneyCredit             Int?      @default(0)
  isDialogWatchedSuggestMemory Boolean?  @default(false)
  aime_user                    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_data_ibfk_1")

  @@unique([user, version], map: "ongeki_profile_profile_uk")
}

model ongeki_profile_kop {
  id                   Int        @id @default(autoincrement())
  user                 Int?
  authKey              Int?
  kopId                Int?
  areaId               Int?
  totalTechScore       Int?
  totalPlatinumScore   Int?
  techRecordDate       String?    @db.VarChar(25)
  isTotalTechNewRecord Boolean?
  aime_user            aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_kop_ibfk_1")

  @@unique([user, kopId], map: "ongeki_profile_kop_uk")
}

model ongeki_profile_option {
  id                 Int       @id @default(autoincrement())
  user               Int       @unique(map: "ongeki_profile_option_uk")
  optionSet          Int?
  speed              Int?
  mirror             Int?
  judgeTiming        Int?
  judgeAdjustment    Int?
  abort              Int?
  tapSound           Int?
  volGuide           Int?
  volAll             Int?
  volTap             Int?
  volCrTap           Int?
  volHold            Int?
  volSide            Int?
  volFlick           Int?
  volBell            Int?
  volEnemy           Int?
  volSkill           Int?
  volDamage          Int?
  colorField         Int?
  colorLaneBright    Int?
  colorLane          Int?
  colorSide          Int?
  effectDamage       Int?
  effectPos          Int?
  judgeDisp          Int?
  judgePos           Int?
  judgeBreak         Int?
  judgeHit           Int?
  platinumBreakDisp  Int?
  judgeCriticalBreak Int?
  matching           Int?
  dispPlayerLv       Int?
  dispRating         Int?
  dispBP             Int?
  headphone          Int?
  stealthField       Int?
  colorWallBright    Int?
  aime_user          aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_option_ibfk_1")
}

model ongeki_profile_rating {
  id             Int       @id @default(autoincrement())
  user           Int
  version        Int
  type           String    @db.VarChar(255)
  index          Int
  musicId        Int?
  difficultId    Int?
  romVersionCode Int?
  score          Int?
  aime_user      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_rating_ibfk_1")

  @@unique([user, version, type, index], map: "ongeki_profile_rating_uk")
}

model ongeki_profile_rating_log {
  id            Int       @id @default(autoincrement())
  user          Int
  highestRating Int?
  dataVersion   String?   @db.VarChar(10)
  aime_user     aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_rating_log_ibfk_1")

  @@unique([user, dataVersion], map: "ongeki_profile_rating_log_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model ongeki_profile_recent_rating {
  id           Int       @id @default(autoincrement())
  user         Int       @unique(map: "ongeki_profile_recent_rating_uk")
  recentRating String?   @db.LongText
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_recent_rating_ibfk_1")
}

model ongeki_profile_region {
  id        Int       @id @default(autoincrement())
  user      Int
  regionId  Int?
  playCount Int?
  created   String?   @db.VarChar(25)
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_region_ibfk_1")

  @@unique([user, regionId], map: "ongeki_profile_region_uk")
}

model ongeki_profile_rival {
  id                                                    Int        @id @default(autoincrement())
  user                                                  Int?
  rivalUserId                                           Int?
  aime_user_ongeki_profile_rival_userToaime_user        aime_user? @relation("ongeki_profile_rival_userToaime_user", fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_rival_ibfk_1")
  aime_user_ongeki_profile_rival_rivalUserIdToaime_user aime_user? @relation("ongeki_profile_rival_rivalUserIdToaime_user", fields: [rivalUserId], references: [id], onDelete: Cascade, map: "ongeki_profile_rival_ibfk_2")

  @@unique([user, rivalUserId], map: "ongeki_profile_rival_uk")
  @@index([rivalUserId], map: "rivalUserId")
}

model ongeki_profile_training_room {
  id        Int        @id @default(autoincrement())
  user      Int?
  roomId    Int?
  authKey   Int?
  cardId    Int?
  valueDate String?    @db.VarChar(25)
  aime_user aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_profile_training_room_ibfk_1")

  @@unique([user, roomId], map: "ongeki_profile_training_room_uk")
}

model ongeki_score_best {
  id               Int       @id @default(autoincrement())
  user             Int
  musicId          Int
  level            Int
  playCount        Int
  techScoreMax     Int
  techScoreRank    Int
  battleScoreMax   Int
  battleScoreRank  Int
  maxComboCount    Int
  maxOverKill      Float     @db.Float
  maxTeamOverKill  Float     @db.Float
  isFullBell       Boolean
  isFullCombo      Boolean
  isAllBreake      Boolean
  isLock           Boolean
  clearStatus      Int
  isStoryWatched   Boolean
  platinumScoreMax Int?
  aime_user        aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_score_best_ibfk_1")

  @@unique([user, musicId, level], map: "ongeki_best_score_uk")
}

model ongeki_score_playlog {
  id                    Int       @id @default(autoincrement())
  user                  Int
  sortNumber            Int?
  placeId               Int?
  placeName             String?   @db.VarChar(255)
  playDate              DateTime? @db.Timestamp(0)
  userPlayDate          DateTime? @db.Timestamp(0)
  musicId               Int?
  level                 Int?
  playKind              Int?
  eventId               Int?
  eventName             String?   @db.VarChar(255)
  eventPoint            Int?
  playedUserId1         Int?
  playedUserId2         Int?
  playedUserId3         Int?
  playedUserName1       String?   @db.VarChar(8)
  playedUserName2       String?   @db.VarChar(8)
  playedUserName3       String?   @db.VarChar(8)
  playedMusicLevel1     Int?
  playedMusicLevel2     Int?
  playedMusicLevel3     Int?
  cardId1               Int?
  cardId2               Int?
  cardId3               Int?
  cardLevel1            Int?
  cardLevel2            Int?
  cardLevel3            Int?
  cardAttack1           Int?
  cardAttack2           Int?
  cardAttack3           Int?
  bossCharaId           Int?
  bossLevel             Int?
  bossAttribute         Int?
  clearStatus           Int?
  techScore             Int?
  techScoreRank         Int?
  battleScore           Int?
  battleScoreRank       Int?
  maxCombo              Int?
  judgeMiss             Int?
  judgeHit              Int?
  judgeBreak            Int?
  judgeCriticalBreak    Int?
  rateTap               Int?
  rateHold              Int?
  rateFlick             Int?
  rateSideTap           Int?
  rateSideHold          Int?
  bellCount             Int?
  totalBellCount        Int?
  damageCount           Int?
  overDamage            Int?
  isTechNewRecord       Boolean?
  isBattleNewRecord     Boolean?
  isOverDamageNewRecord Boolean?
  isFullCombo           Boolean?
  isFullBell            Boolean?
  isAllBreak            Boolean?
  playerRating          Int?
  battlePoint           Int?
  platinumScore         Int?
  platinumScoreMax      Int?
  aime_user             aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_score_playlog_ibfk_1")

  @@index([user], map: "user")
}

model ongeki_score_tech_count {
  id                Int       @id @default(autoincrement())
  user              Int
  levelId           Int
  allBreakCount     Int?
  allBreakPlusCount Int?
  aime_user         aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_score_tech_count_ibfk_1")

  @@unique([user, levelId], map: "ongeki_tech_count_uk")
}

model ongeki_session_log {
  id           Int        @id @default(autoincrement())
  user         Int?
  sortNumber   Int?
  placeId      Int?
  playDate     String?    @db.VarChar(10)
  userPlayDate String?    @db.VarChar(25)
  isPaid       Boolean?
  aime_user    aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_session_log_ibfk_1")

  @@index([user], map: "user")
}

model ongeki_static_cards {
  id              Int     @id @default(autoincrement())
  version         Int
  cardId          Int
  name            String  @db.VarChar(255)
  charaId         Int
  nickName        String? @db.VarChar(255)
  school          String  @db.VarChar(255)
  attribute       String  @db.VarChar(5)
  gakunen         String  @db.VarChar(255)
  rarity          Int
  levelParam      String  @db.VarChar(255)
  skillId         Int
  choKaikaSkillId Int
  cardNumber      String? @db.VarChar(255)

  @@unique([version, cardId], map: "ongeki_static_cards_uk")
}

model ongeki_static_client_testmode {
  id              Int      @id @default(autoincrement())
  regionId        Int
  placeId         Int
  clientId        String   @unique(map: "ongeki_static_client_testmode_uk") @db.VarChar(11)
  updateDate      DateTime @db.Timestamp(0)
  isDelivery      Boolean
  groupId         Int
  groupRole       Int
  continueMode    Int
  selectMusicTime Int
  advertiseVolume Int
  eventMode       Int
  eventMusicNum   Int
  patternGp       Int
  limitGp         Int
  maxLeverMovable Int
  minLeverMovable Int
}

model ongeki_static_events {
  id        Int       @id @default(autoincrement())
  version   Int?
  eventId   Int?
  type      Int?
  name      String?   @db.VarChar(255)
  startDate DateTime? @default(now()) @db.Timestamp(0)
  enabled   Boolean?  @default(true)
  endDate   DateTime  @default(now()) @db.Timestamp(0)

  @@unique([version, eventId, type], map: "ongeki_static_events_uk")
}

model ongeki_static_gacha_cards {
  id       Int      @id @default(autoincrement())
  gachaId  Int
  cardId   Int
  rarity   Int
  weight   Int?     @default(1)
  isPickup Boolean? @default(false)
  isSelect Boolean? @default(false)

  @@unique([gachaId, cardId], map: "ongeki_static_gacha_cards_uk")
}

model ongeki_static_gachas {
  id              Int       @id @default(autoincrement())
  version         Int
  gachaId         Int
  gachaName       String    @db.VarChar(255)
  type            Int       @default(0)
  kind            Int       @default(0)
  isCeiling       Boolean?  @default(false)
  maxSelectPoint  Int?      @default(0)
  ceilingCnt      Int?      @default(10)
  changeRateCnt1  Int?      @default(0)
  changeRateCnt2  Int?      @default(0)
  startDate       DateTime? @default(dbgenerated("('2017-12-31 19:00:00')")) @db.Timestamp(0)
  endDate         DateTime? @default(dbgenerated("('2037-12-31 19:00:00')")) @db.Timestamp(0)
  noticeStartDate DateTime? @default(dbgenerated("('2017-12-31 19:00:00')")) @db.Timestamp(0)
  noticeEndDate   DateTime? @default(dbgenerated("('2037-12-31 19:00:00')")) @db.Timestamp(0)
  convertEndDate  DateTime? @default(dbgenerated("('2037-12-31 19:00:00')")) @db.Timestamp(0)

  @@unique([version, gachaId, gachaName], map: "ongeki_static_gachas_uk")
}

model ongeki_static_game_point {
  id        Int    @id @default(autoincrement())
  type      Int    @unique(map: "ongeki_static_game_point_uk")
  cost      Int
  startDate String @default("2000-01-01 05:00:00.0") @db.VarChar(25)
  endDate   String @default("2099-01-01 05:00:00.0") @db.VarChar(25)
}

model ongeki_static_music {
  id      Int     @id @default(autoincrement())
  version Int?
  songId  Int?
  chartId Int?
  title   String? @db.VarChar(255)
  artist  String? @db.VarChar(255)
  genre   String? @db.VarChar(255)
  level   Float?  @db.Float

  @@unique([version, songId, chartId], map: "ongeki_static_music_uk")
}

model ongeki_static_music_ranking_list {
  id       Int     @id @default(autoincrement())
  version  Int
  musicId  Int
  point    Int
  userName String? @db.VarChar(255)

  @@unique([version, musicId], map: "ongeki_static_music_ranking_uk")
}

model ongeki_static_present_list {
  id          Int     @id @default(autoincrement())
  version     Int
  presentId   Int
  presentName String  @db.VarChar(255)
  rewardId    Int
  stock       Int
  message     String? @db.VarChar(255)
  startDate   String  @db.VarChar(25)
  endDate     String  @db.VarChar(25)

  @@unique([version, presentId], map: "ongeki_static_present_list_uk")
}

model ongeki_static_rewards {
  id         Int    @id @default(autoincrement())
  version    Int
  rewardId   Int
  rewardname String @db.VarChar(255)
  itemKind   Int
  itemId     Int

  @@unique([version, rewardId], map: "ongeki_static_rewards_uk")
}

model ongeki_static_tech_music {
  id      Int @id @default(autoincrement())
  version Int
  eventId Int
  musicId Int
  level   Int

  @@unique([version, musicId], map: "ongeki_static_tech_music_uk")
}

model ongeki_tech_event_ranking {
  id                 Int       @id @default(autoincrement())
  user               Int
  version            Int
  date               String?   @db.VarChar(25)
  eventId            Int
  rank               Int?
  totalPlatinumScore Int
  totalTechScore     Int
  aime_user          aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_tech_event_ranking_ibfk_1")

  @@unique([user, eventId], map: "ongeki_tech_event_ranking_uk")
}

model ongeki_user_boss {
  id        Int        @id @default(autoincrement())
  user      Int?
  musicId   Int?
  damage    Int?
  isClear   Boolean?
  eventId   Int?
  aime_user aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_boss_ibfk_1")

  @@unique([user, musicId, eventId], map: "ongeki_user_boss_uk")
}

model ongeki_user_card {
  id           Int        @id @default(autoincrement())
  user         Int?
  cardId       Int?
  digitalStock Int?
  analogStock  Int?
  level        Int?
  maxLevel     Int?
  exp          Int?
  printCount   Int?
  useCount     Int?
  isNew        Boolean?
  kaikaDate    String?    @db.VarChar(25)
  choKaikaDate String?    @db.VarChar(25)
  skillId      Int?
  isAcquired   Boolean?
  created      String?    @db.VarChar(25)
  aime_user    aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_card_ibfk_1")

  @@unique([user, cardId], map: "ongeki_user_card_uk")
}

model ongeki_user_chapter {
  id                    Int        @id @default(autoincrement())
  user                  Int?
  chapterId             Int?
  jewelCount            Int?
  isStoryWatched        Boolean?
  isClear               Boolean?
  lastPlayMusicId       Int?
  lastPlayMusicCategory Int?
  lastPlayMusicLevel    Int?
  skipTiming1           Int?
  skipTiming2           Int?
  aime_user             aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_chapter_ibfk_1")

  @@unique([user, chapterId], map: "ongeki_user_chapter_uk")
}

model ongeki_user_character {
  id                    Int        @id @default(autoincrement())
  user                  Int?
  characterId           Int?
  costumeId             Int?
  attachmentId          Int?
  playCount             Int?
  intimateLevel         Int?
  intimateCount         Int?
  intimateCountRewarded Int?
  intimateCountDate     String?    @db.VarChar(25)
  isNew                 Boolean?
  aime_user             aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_character_ibfk_1")

  @@unique([user, characterId], map: "ongeki_user_character_uk")
}

model ongeki_user_deck {
  id        Int        @id @default(autoincrement())
  user      Int?
  deckId    Int?
  cardId1   Int?
  cardId2   Int?
  cardId3   Int?
  aime_user aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_deck_ibfk_1")

  @@unique([user, deckId], map: "ongeki_user_deck_uk")
}

model ongeki_user_event_music {
  id               Int        @id @default(autoincrement())
  user             Int?
  eventId          Int?
  type             Int?
  musicId          Int?
  level            Int?
  techScoreMax     Int?
  platinumScoreMax Int?
  techRecordDate   String?    @db.VarChar(25)
  isTechNewRecord  Boolean?
  aime_user        aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_event_music_ibfk_1")

  @@unique([user, eventId, type, musicId, level], map: "ongeki_user_event_music")
}

model ongeki_user_event_point {
  id                Int        @id @default(autoincrement())
  user              Int?
  eventId           Int?
  point             Int?
  isRankingRewarded Boolean?
  version           Int
  rank              Int?
  type              Int
  date              String?    @db.VarChar(25)
  aime_user         aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_event_point_ibfk_1")

  @@unique([user, eventId], map: "ongeki_user_event_point_uk")
}

model ongeki_user_gacha {
  id              Int       @id @default(autoincrement())
  user            Int
  gachaId         Int
  totalGachaCnt   Int?      @default(0)
  ceilingGachaCnt Int?      @default(0)
  selectPoint     Int?      @default(0)
  useSelectPoint  Int?      @default(0)
  dailyGachaCnt   Int?      @default(0)
  fiveGachaCnt    Int?      @default(0)
  elevenGachaCnt  Int?      @default(0)
  dailyGachaDate  DateTime  @default(now()) @db.Timestamp(0)
  aime_user       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_gacha_ibfk_1")

  @@unique([user, gachaId], map: "ongeki_user_gacha_uk")
}

model ongeki_user_gacha_supply {
  id        Int       @id @default(autoincrement())
  user      Int
  cardId    Int
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_gacha_supply_ibfk_1")

  @@unique([user, cardId], map: "ongeki_user_gacha_supply_uk")
}

model ongeki_user_item {
  id        Int        @id @default(autoincrement())
  user      Int?
  itemKind  Int?
  itemId    Int?
  stock     Int?
  isValid   Boolean?
  aime_user aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_item_ibfk_1")

  @@unique([user, itemKind, itemId], map: "ongeki_user_item_uk")
}

model ongeki_user_login_bonus {
  id             Int        @id @default(autoincrement())
  user           Int?
  bonusId        Int?
  bonusCount     Int?
  lastUpdateDate String?    @db.VarChar(25)
  aime_user      aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_login_bonus_ibfk_1")

  @@unique([user, bonusId], map: "ongeki_user_login_bonus_uk")
}

model ongeki_user_memorychapter {
  id                    Int        @id @default(autoincrement())
  user                  Int?
  chapterId             Int?
  gaugeId               Int?
  gaugeNum              Int?
  jewelCount            Int?
  isStoryWatched        Boolean?
  isBossWatched         Boolean?
  isDialogWatched       Boolean?
  isEndingWatched       Boolean?
  isClear               Boolean?
  lastPlayMusicId       Int?
  lastPlayMusicLevel    Int?
  lastPlayMusicCategory Int?
  aime_user             aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_memorychapter_ibfk_1")

  @@unique([user, chapterId], map: "ongeki_user_memorychapter_uk")
}

model ongeki_user_mission_point {
  id        Int        @id @default(autoincrement())
  user      Int?
  eventId   Int?
  point     Int?
  version   Int
  aime_user aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_mission_point_ibfk_1")

  @@unique([user, eventId], map: "ongeki_user_mission_point_uk")
}

model ongeki_user_music_item {
  id        Int        @id @default(autoincrement())
  user      Int?
  musicId   Int?
  status    Int?
  aime_user aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_music_item_ibfk_1")

  @@unique([user, musicId], map: "ongeki_user_music_item_uk")
}

model ongeki_user_print_detail {
  id              Int       @id @default(autoincrement())
  user            Int
  cardId          Int
  cardType        Int?      @default(0)
  printDate       DateTime  @db.Timestamp(0)
  serialId        String    @unique(map: "ongeki_user_print_detail_uk") @db.VarChar(20)
  placeId         Int
  clientId        String    @db.VarChar(11)
  printerSerialId String    @db.VarChar(20)
  isHolograph     Boolean?  @default(false)
  isAutographed   Boolean?  @default(false)
  printOption1    Boolean?  @default(true)
  printOption2    Boolean?  @default(true)
  printOption3    Boolean?  @default(true)
  printOption4    Boolean?  @default(true)
  printOption5    Boolean?  @default(true)
  printOption6    Boolean?  @default(true)
  printOption7    Boolean?  @default(true)
  printOption8    Boolean?  @default(true)
  printOption9    Boolean?  @default(true)
  printOption10   Boolean?  @default(false)
  aime_user       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_print_detail_ibfk_1")

  @@index([user], map: "user")
}

model ongeki_user_scenerio {
  id         Int        @id @default(autoincrement())
  user       Int?
  scenarioId Int?
  playCount  Int?
  aime_user  aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_scenerio_ibfk_1")

  @@unique([user, scenarioId], map: "ongeki_user_scenerio_uk")
}

model ongeki_user_story {
  id                    Int        @id @default(autoincrement())
  user                  Int?
  storyId               Int?
  jewelCount            Int?
  lastChapterId         Int?
  lastPlayMusicId       Int?
  lastPlayMusicCategory Int?
  lastPlayMusicLevel    Int?
  aime_user             aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_story_ibfk_1")

  @@unique([user, storyId], map: "ongeki_user_story_uk")
}

model ongeki_user_tech_event {
  id                   Int        @id @default(autoincrement())
  user                 Int?
  eventId              Int?
  totalTechScore       Int?
  totalPlatinumScore   Int?
  techRecordDate       String?    @db.VarChar(25)
  isRankingRewarded    Boolean?
  isTotalTechNewRecord Boolean?
  version              Int
  aime_user            aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_tech_event_ibfk_1")

  @@unique([user, eventId], map: "ongeki_user_tech_event_uk")
}

model ongeki_user_trade_item {
  id          Int        @id @default(autoincrement())
  user        Int?
  chapterId   Int?
  tradeItemId Int?
  tradeCount  Int?
  aime_user   aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "ongeki_user_trade_item_ibfk_1")

  @@unique([user, chapterId, tradeItemId], map: "ongeki_user_trade_item_uk")
}

model pokken_item {
  id        Int       @id @default(autoincrement())
  user      Int       @unique(map: "user")
  category  Int?
  content   Int?
  type      Int?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "pokken_item_ibfk_1")

  @@unique([user, category, content, type], map: "pokken_item_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model pokken_match_data {
  id             Int       @id @default(autoincrement())
  user           Int
  num_games      Int?
  play_modes     String?   @db.LongText
  results        String?   @db.LongText
  ex_ko_num      Int?
  wko_num        Int?
  timeup_win_num Int?
  cool_ko_num    Int?
  perfect_ko_num Int?
  use_navi       Int?
  use_navi_cloth Int?
  use_aid_skill  Int?
  play_date      DateTime? @db.Timestamp(0)
  aime_user      aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "pokken_match_data_ibfk_1")

  @@index([user], map: "user")
}

model pokken_pokemon_data {
  id                      Int       @id @default(autoincrement())
  user                    Int
  char_id                 Int?
  illustration_book_no    Int
  pokemon_exp             Int?
  battle_num_vs_wan       Int?
  win_vs_wan              Int?
  battle_num_vs_lan       Int?
  win_vs_lan              Int?
  battle_num_vs_cpu       Int?
  win_cpu                 Int?
  battle_all_num_tutorial Int?
  battle_num_tutorial     Int?
  bp_point_atk            Int?
  bp_point_res            Int?
  bp_point_def            Int?
  bp_point_sp             Int?
  aime_user               aime_user @relation(fields: [user], references: [id], onUpdate: Restrict, map: "pokken_pokemon_data_ibfk_1")

  @@unique([user, illustration_book_no], map: "pokken_pokemon_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model pokken_profile {
  id                      Int       @id @default(autoincrement())
  user                    Int       @unique(map: "user")
  trainer_name            String?   @db.VarChar(14)
  home_region_code        Int?
  home_loc_name           String?   @db.VarChar(255)
  pref_code               Int?
  navi_newbie_flag        Boolean?
  navi_enable_flag        Boolean?
  pad_vibrate_flag        Boolean?
  trainer_rank_point      Int?
  wallet                  Int?
  fight_money             Int?
  score_point             Int?
  grade_max_num           Int?
  extra_counter           Int?
  tutorial_progress_flag  String?   @db.LongText
  total_play_days         Int?
  play_date_time          Int?
  achievement_flag        String?   @db.LongText
  lucky_box_fail_num      Int?
  event_reward_get_flag   Int?
  rank_pvp_all            Int?
  rank_pvp_loc            Int?
  rank_cpu_all            Int?
  rank_cpu_loc            Int?
  rank_event              Int?
  awake_num               Int?
  use_support_num         Int?
  rankmatch_flag          Int?
  rankmatch_max           Int?
  rankmatch_progress      String?   @db.LongText
  rankmatch_success       Int?
  beat_num                Int?
  title_text_id           Int?
  title_plate_id          Int?
  title_decoration_id     Int?
  support_pokemon_list    String?   @db.LongText
  support_set_1_1         Int?
  support_set_1_2         Int?
  support_set_2_1         Int?
  support_set_2_2         Int?
  support_set_3_1         Int?
  support_set_3_2         Int?
  navi_trainer            Int?
  navi_version_id         Int?
  aid_skill_list          String?   @db.LongText
  aid_skill               Int?
  comment_text_id         Int?
  comment_word_id         Int?
  latest_use_pokemon      Int?
  ex_ko_num               Int?
  wko_num                 Int?
  timeup_win_num          Int?
  cool_ko_num             Int?
  perfect_ko_num          Int?
  record_flag             Int?
  continue_num            Int?
  avatar_body             Int?
  avatar_gender           Int?
  avatar_background       Int?
  avatar_head             Int?
  avatar_battleglass      Int?
  avatar_face0            Int?
  avatar_face1            Int?
  avatar_face2            Int?
  avatar_bodyall          Int?
  avatar_wear             Int?
  avatar_accessory        Int?
  avatar_stamp            Int?
  event_state             Int?
  event_id                Int?
  sp_bonus_category_id_1  Int?
  sp_bonus_key_value_1    Int?
  sp_bonus_category_id_2  Int?
  sp_bonus_key_value_2    Int?
  last_play_event_id      Int?
  event_achievement_flag  String?   @db.LongText
  event_achievement_param String?   @db.LongText
  battle_num_vs_wan       Int?
  win_vs_wan              Int?
  battle_num_vs_lan       Int?
  win_vs_lan              Int?
  battle_num_vs_cpu       Int?
  win_cpu                 Int?
  battle_num_tutorial     Int?
  aime_user               aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "pokken_profile_ibfk_1")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model sao_end_sessions {
  id               Int       @id @default(autoincrement())
  user             Int
  quest_id         Int
  play_result_flag Boolean
  reward_data      String?   @db.LongText
  play_date        DateTime  @default(now()) @db.Timestamp(0)
  aime_user        aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_end_sessions_ibfk_1")

  @@index([user], map: "user")
}

model sao_equipment_data {
  id                                                                                Int                       @id @default(autoincrement())
  user                                                                              Int
  equipment_id                                                                      BigInt
  enhancement_value                                                                 Int
  enhancement_exp                                                                   Int
  awakening_exp                                                                     Int
  awakening_stage                                                                   Int
  possible_awakening_flag                                                           Int
  get_date                                                                          DateTime                  @default(now()) @db.Timestamp(0)
  is_shop_purchase                                                                  Boolean                   @default(false)
  is_protect                                                                        Boolean                   @default(false)
  property1_property_id                                                             BigInt                    @default(2)
  property1_value1                                                                  Int                       @default(0)
  property1_value2                                                                  Int                       @default(0)
  property2_property_id                                                             BigInt                    @default(2)
  property2_value1                                                                  Int                       @default(0)
  property2_value2                                                                  Int                       @default(0)
  property3_property_id                                                             BigInt                    @default(2)
  property3_value1                                                                  Int                       @default(0)
  property3_value2                                                                  Int                       @default(0)
  property4_property_id                                                             BigInt                    @default(2)
  property4_value1                                                                  Int                       @default(0)
  property4_value2                                                                  Int                       @default(0)
  converted_card_num                                                                Int                       @default(0)
  aime_user                                                                         aime_user                 @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_equipment_data_ibfk_1")
  sao_static_property_sao_equipment_data_property2_property_idTosao_static_property sao_static_property       @relation("sao_equipment_data_property2_property_idTosao_static_property", fields: [property2_property_id], references: [PropertyId], onDelete: Cascade, map: "sao_equipment_data_ibfk_2")
  sao_static_property_sao_equipment_data_property4_property_idTosao_static_property sao_static_property       @relation("sao_equipment_data_property4_property_idTosao_static_property", fields: [property4_property_id], references: [PropertyId], onDelete: Cascade, map: "sao_equipment_data_ibfk_3")
  sao_static_property_sao_equipment_data_property3_property_idTosao_static_property sao_static_property       @relation("sao_equipment_data_property3_property_idTosao_static_property", fields: [property3_property_id], references: [PropertyId], onDelete: Cascade, map: "sao_equipment_data_ibfk_4")
  sao_static_property_sao_equipment_data_property1_property_idTosao_static_property sao_static_property       @relation("sao_equipment_data_property1_property_idTosao_static_property", fields: [property1_property_id], references: [PropertyId], onDelete: Cascade, map: "sao_equipment_data_ibfk_5")
  sao_static_equipment_list                                                         sao_static_equipment_list @relation(fields: [equipment_id], references: [EquipmentId], onDelete: Cascade, map: "sao_equipment_data_ibfk_6")
  sao_hero_log_data_sao_hero_log_data_sub_equipmentTosao_equipment_data             sao_hero_log_data[]       @relation("sao_hero_log_data_sub_equipmentTosao_equipment_data")
  sao_hero_log_data_sao_hero_log_data_main_weaponTosao_equipment_data               sao_hero_log_data[]       @relation("sao_hero_log_data_main_weaponTosao_equipment_data")

  @@unique([user, equipment_id], map: "sao_equipment_data_uk")
  @@index([equipment_id], map: "equipment_id")
  @@index([property1_property_id], map: "property1_property_id")
  @@index([property2_property_id], map: "property2_property_id")
  @@index([property3_property_id], map: "property3_property_id")
  @@index([property4_property_id], map: "property4_property_id")
}

model sao_hero_log_data {
  id                                                                               Int                    @id @default(autoincrement())
  user                                                                             Int
  hero_log_id                                                                      BigInt
  log_level                                                                        Int
  log_exp                                                                          Int
  main_weapon                                                                      Int?
  sub_equipment                                                                    Int?
  skill_slot1_skill_id                                                             BigInt?
  skill_slot2_skill_id                                                             BigInt?
  skill_slot3_skill_id                                                             BigInt?
  skill_slot4_skill_id                                                             BigInt?
  skill_slot5_skill_id                                                             BigInt?
  get_date                                                                         DateTime               @default(now()) @db.Timestamp(0)
  max_level_extend_num                                                             Int                    @default(0)
  is_awakenable                                                                    Boolean                @default(false)
  awakening_stage                                                                  Int                    @default(0)
  awakening_exp                                                                    Int                    @default(0)
  is_shop_purchase                                                                 Boolean                @default(false)
  is_protect                                                                       Boolean                @default(false)
  property1_property_id                                                            BigInt                 @default(2)
  property1_value1                                                                 Int                    @default(0)
  property1_value2                                                                 Int                    @default(0)
  property2_property_id                                                            BigInt                 @default(2)
  property2_value1                                                                 Int                    @default(0)
  property2_value2                                                                 Int                    @default(0)
  property3_property_id                                                            BigInt                 @default(2)
  property3_value1                                                                 Int                    @default(0)
  property3_value2                                                                 Int                    @default(0)
  property4_property_id                                                            BigInt                 @default(2)
  property4_value1                                                                 Int                    @default(0)
  property4_value2                                                                 Int                    @default(0)
  converted_card_num                                                               Int                    @default(0)
  aime_user                                                                        aime_user              @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_hero_log_data_ibfk_1")
  sao_equipment_data_sao_hero_log_data_sub_equipmentTosao_equipment_data           sao_equipment_data?    @relation("sao_hero_log_data_sub_equipmentTosao_equipment_data", fields: [sub_equipment], references: [id], onUpdate: SetNull, map: "sao_hero_log_data_ibfk_10")
  sao_static_property_sao_hero_log_data_property1_property_idTosao_static_property sao_static_property    @relation("sao_hero_log_data_property1_property_idTosao_static_property", fields: [property1_property_id], references: [PropertyId], onDelete: Cascade, map: "sao_hero_log_data_ibfk_11")
  sao_static_hero_list                                                             sao_static_hero_list   @relation(fields: [hero_log_id], references: [HeroLogId], onDelete: Cascade, map: "sao_hero_log_data_ibfk_12")
  sao_static_property_sao_hero_log_data_property2_property_idTosao_static_property sao_static_property    @relation("sao_hero_log_data_property2_property_idTosao_static_property", fields: [property2_property_id], references: [PropertyId], onDelete: Cascade, map: "sao_hero_log_data_ibfk_13")
  sao_static_property_sao_hero_log_data_property4_property_idTosao_static_property sao_static_property    @relation("sao_hero_log_data_property4_property_idTosao_static_property", fields: [property4_property_id], references: [PropertyId], onDelete: Cascade, map: "sao_hero_log_data_ibfk_2")
  sao_static_skill_sao_hero_log_data_skill_slot1_skill_idTosao_static_skill        sao_static_skill?      @relation("sao_hero_log_data_skill_slot1_skill_idTosao_static_skill", fields: [skill_slot1_skill_id], references: [SkillId], onUpdate: SetNull, map: "sao_hero_log_data_ibfk_3")
  sao_static_skill_sao_hero_log_data_skill_slot5_skill_idTosao_static_skill        sao_static_skill?      @relation("sao_hero_log_data_skill_slot5_skill_idTosao_static_skill", fields: [skill_slot5_skill_id], references: [SkillId], onUpdate: SetNull, map: "sao_hero_log_data_ibfk_4")
  sao_static_skill_sao_hero_log_data_skill_slot2_skill_idTosao_static_skill        sao_static_skill?      @relation("sao_hero_log_data_skill_slot2_skill_idTosao_static_skill", fields: [skill_slot2_skill_id], references: [SkillId], onUpdate: SetNull, map: "sao_hero_log_data_ibfk_5")
  sao_static_skill_sao_hero_log_data_skill_slot3_skill_idTosao_static_skill        sao_static_skill?      @relation("sao_hero_log_data_skill_slot3_skill_idTosao_static_skill", fields: [skill_slot3_skill_id], references: [SkillId], onUpdate: SetNull, map: "sao_hero_log_data_ibfk_6")
  sao_equipment_data_sao_hero_log_data_main_weaponTosao_equipment_data             sao_equipment_data?    @relation("sao_hero_log_data_main_weaponTosao_equipment_data", fields: [main_weapon], references: [id], onUpdate: SetNull, map: "sao_hero_log_data_ibfk_7")
  sao_static_property_sao_hero_log_data_property3_property_idTosao_static_property sao_static_property    @relation("sao_hero_log_data_property3_property_idTosao_static_property", fields: [property3_property_id], references: [PropertyId], onDelete: Cascade, map: "sao_hero_log_data_ibfk_8")
  sao_static_skill_sao_hero_log_data_skill_slot4_skill_idTosao_static_skill        sao_static_skill?      @relation("sao_hero_log_data_skill_slot4_skill_idTosao_static_skill", fields: [skill_slot4_skill_id], references: [SkillId], onUpdate: SetNull, map: "sao_hero_log_data_ibfk_9")
  sao_hero_party_sao_hero_party_user_hero_log_id_3Tosao_hero_log_data              sao_hero_party[]       @relation("sao_hero_party_user_hero_log_id_3Tosao_hero_log_data")
  sao_hero_party_sao_hero_party_user_hero_log_id_1Tosao_hero_log_data              sao_hero_party[]       @relation("sao_hero_party_user_hero_log_id_1Tosao_hero_log_data")
  sao_hero_party_sao_hero_party_user_hero_log_id_2Tosao_hero_log_data              sao_hero_party[]       @relation("sao_hero_party_user_hero_log_id_2Tosao_hero_log_data")
  sao_player_hero_card                                                             sao_player_hero_card[]
  sao_profile                                                                      sao_profile[]

  @@unique([user, hero_log_id], map: "sao_hero_log_data_uk")
  @@index([hero_log_id], map: "hero_log_id")
  @@index([main_weapon], map: "main_weapon")
  @@index([property1_property_id], map: "property1_property_id")
  @@index([property2_property_id], map: "property2_property_id")
  @@index([property3_property_id], map: "property3_property_id")
  @@index([property4_property_id], map: "property4_property_id")
  @@index([skill_slot1_skill_id], map: "skill_slot1_skill_id")
  @@index([skill_slot2_skill_id], map: "skill_slot2_skill_id")
  @@index([skill_slot3_skill_id], map: "skill_slot3_skill_id")
  @@index([skill_slot4_skill_id], map: "skill_slot4_skill_id")
  @@index([skill_slot5_skill_id], map: "skill_slot5_skill_id")
  @@index([sub_equipment], map: "sub_equipment")
}

model sao_hero_party {
  id                                                                     Int               @id @default(autoincrement())
  user                                                                   Int
  user_party_team_id                                                     Int
  user_hero_log_id_1                                                     Int
  user_hero_log_id_2                                                     Int
  user_hero_log_id_3                                                     Int
  aime_user                                                              aime_user         @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_hero_party_ibfk_1")
  sao_hero_log_data_sao_hero_party_user_hero_log_id_3Tosao_hero_log_data sao_hero_log_data @relation("sao_hero_party_user_hero_log_id_3Tosao_hero_log_data", fields: [user_hero_log_id_3], references: [id], onDelete: Cascade, map: "sao_hero_party_ibfk_2")
  sao_hero_log_data_sao_hero_party_user_hero_log_id_1Tosao_hero_log_data sao_hero_log_data @relation("sao_hero_party_user_hero_log_id_1Tosao_hero_log_data", fields: [user_hero_log_id_1], references: [id], onDelete: Cascade, map: "sao_hero_party_ibfk_3")
  sao_hero_log_data_sao_hero_party_user_hero_log_id_2Tosao_hero_log_data sao_hero_log_data @relation("sao_hero_party_user_hero_log_id_2Tosao_hero_log_data", fields: [user_hero_log_id_2], references: [id], onDelete: Cascade, map: "sao_hero_party_ibfk_4")

  @@unique([user, user_party_team_id], map: "sao_hero_party_uk")
  @@index([user_hero_log_id_1], map: "user_hero_log_id_1")
  @@index([user_hero_log_id_2], map: "user_hero_log_id_2")
  @@index([user_hero_log_id_3], map: "user_hero_log_id_3")
}

model sao_item_data {
  id        Int       @id @default(autoincrement())
  user      Int
  item_id   Int
  get_date  DateTime  @default(now()) @db.Timestamp(0)
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_item_data_ibfk_1")

  @@unique([user, item_id], map: "sao_item_data_uk")
}

model sao_play_sessions {
  id                          Int       @id @default(autoincrement())
  user                        Int
  user_party_team_id          Int
  episode_id                  Int
  play_mode                   Int
  quest_drop_boost_apply_flag Int
  play_date                   DateTime  @default(now()) @db.Timestamp(0)
  aime_user                   aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_play_sessions_ibfk_1")

  @@unique([user, user_party_team_id, play_date], map: "sao_play_sessions_uk")
}

model sao_player_quest {
  id                        Int              @id @default(autoincrement())
  user                      Int
  quest_scene_id            BigInt
  quest_clear_flag          Boolean
  clear_time                Int
  combo_num                 Int
  total_damage              Int
  concurrent_destroying_num Int
  play_date                 DateTime         @default(now()) @db.Timestamp(0)
  quest_type                Int              @default(1)
  aime_user                 aime_user        @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_player_quest_ibfk_1")
  sao_static_quest          sao_static_quest @relation(fields: [quest_scene_id], references: [QuestSceneId], onDelete: Cascade, map: "sao_player_quest_ibfk_2")

  @@unique([user, quest_scene_id], map: "sao_player_quest_uk")
  @@index([quest_scene_id], map: "quest_scene_id")
}

model sao_profile {
  id                        Int                @id @default(autoincrement())
  user                      Int                @unique(map: "user")
  user_type                 Int?               @default(1)
  nick_name                 String?            @default("PLAYER") @db.VarChar(16)
  rank_num                  Int?               @default(1)
  rank_exp                  Int?               @default(0)
  own_col                   Int?               @default(0)
  own_vp                    Int?               @default(0)
  own_yui_medal             Int?               @default(0)
  setting_title_id          Int?               @default(20005)
  my_shop                   Int?
  fav_hero                  Int?
  when_register             DateTime?          @default(now()) @db.Timestamp(0)
  last_login_date           DateTime?          @db.Timestamp(0)
  last_yui_medal_date       DateTime?          @db.Timestamp(0)
  last_bonus_yui_medal_date DateTime?          @db.Timestamp(0)
  last_comeback_date        DateTime?          @db.Timestamp(0)
  last_login_bonus_date     DateTime?          @db.Timestamp(0)
  ad_confirm_date           DateTime?          @db.Timestamp(0)
  login_ct                  Int?               @default(0)
  aime_user                 aime_user          @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_profile_ibfk_1")
  sao_hero_log_data         sao_hero_log_data? @relation(fields: [fav_hero], references: [id], map: "sao_profile_ibfk_2")

  @@index([fav_hero], map: "fav_hero")
}

model sao_static_equipment_list {
  EquipmentId                                                                              BigInt                 @id @default(autoincrement())
  EquipmentType                                                                            Int
  WeaponTypeId                                                                             Int
  Name                                                                                     String                 @db.VarChar(255)
  Name_en                                                                                  String?                @db.VarChar(255)
  Rarity                                                                                   Int
  Power                                                                                    Int
  StrengthIncrement                                                                        Int
  SkillCondition                                                                           Int
  Property1PropertyId                                                                      BigInt
  Property1Value1                                                                          Int
  Property1Value2                                                                          Int
  Property2PropertyId                                                                      BigInt
  Property2Value1                                                                          Int
  Property2Value2                                                                          Int
  Property3PropertyId                                                                      BigInt
  Property3Value1                                                                          Int
  Property3Value2                                                                          Int
  Property4PropertyId                                                                      BigInt
  Property4Value1                                                                          Int
  Property4Value2                                                                          Int
  SalePrice                                                                                Int
  CompositionExp                                                                           Int
  AwakeningExp                                                                             Int
  FlavorText                                                                               String                 @db.VarChar(255)
  FlavorText_en                                                                            String?                @db.VarChar(255)
  sao_equipment_data                                                                       sao_equipment_data[]
  sao_static_property_sao_static_equipment_list_Property1PropertyIdTosao_static_property   sao_static_property    @relation("sao_static_equipment_list_Property1PropertyIdTosao_static_property", fields: [Property1PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_equipment_list_ibfk_1")
  sao_static_property_sao_static_equipment_list_Property2PropertyIdTosao_static_property   sao_static_property    @relation("sao_static_equipment_list_Property2PropertyIdTosao_static_property", fields: [Property2PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_equipment_list_ibfk_2")
  sao_static_property_sao_static_equipment_list_Property3PropertyIdTosao_static_property   sao_static_property    @relation("sao_static_equipment_list_Property3PropertyIdTosao_static_property", fields: [Property3PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_equipment_list_ibfk_3")
  sao_static_property_sao_static_equipment_list_Property4PropertyIdTosao_static_property   sao_static_property    @relation("sao_static_equipment_list_Property4PropertyIdTosao_static_property", fields: [Property4PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_equipment_list_ibfk_4")
  sao_static_hero_list_sao_static_hero_list_DefaultEquipmentId1Tosao_static_equipment_list sao_static_hero_list[] @relation("sao_static_hero_list_DefaultEquipmentId1Tosao_static_equipment_list")
  sao_static_hero_list_sao_static_hero_list_DefaultEquipmentId2Tosao_static_equipment_list sao_static_hero_list[] @relation("sao_static_hero_list_DefaultEquipmentId2Tosao_static_equipment_list")

  @@index([Property1PropertyId], map: "Property1PropertyId")
  @@index([Property2PropertyId], map: "Property2PropertyId")
  @@index([Property3PropertyId], map: "Property3PropertyId")
  @@index([Property4PropertyId], map: "Property4PropertyId")
}

model sao_static_hero_list {
  HeroLogId                                                                                     BigInt                     @id @default(autoincrement())
  CharaId                                                                                       Int
  Name                                                                                          String                     @db.VarChar(255)
  Nickname                                                                                      String                     @db.VarChar(255)
  Name_en                                                                                       String?                    @db.VarChar(255)
  Nickname_en                                                                                   String?                    @db.VarChar(255)
  Rarity                                                                                        Int
  WeaponTypeId                                                                                  Int
  HeroLogRoleId                                                                                 Int
  CostumeTypeId                                                                                 Int
  UnitId                                                                                        Int
  DefaultEquipmentId1                                                                           BigInt?
  DefaultEquipmentId2                                                                           BigInt?
  SkillTableSubId                                                                               Int
  HpMin                                                                                         Int
  HpMax                                                                                         Int
  StrMin                                                                                        Int
  StrMax                                                                                        Int
  VitMin                                                                                        Int
  VitMax                                                                                        Int
  IntMin                                                                                        Int
  IntMax                                                                                        Int
  Property1PropertyId                                                                           BigInt
  Property1Value1                                                                               Int
  Property1Value2                                                                               Int
  Property2PropertyId                                                                           BigInt
  Property2Value1                                                                               Int
  Property2Value2                                                                               Int
  Property3PropertyId                                                                           BigInt
  Property3Value1                                                                               Int
  Property3Value2                                                                               Int
  Property4PropertyId                                                                           BigInt
  Property4Value1                                                                               Int
  Property4Value2                                                                               Int
  FlavorText                                                                                    String                     @db.VarChar(255)
  FlavorText_en                                                                                 String?                    @db.VarChar(255)
  SalePrice                                                                                     Int
  CompositionExp                                                                                Int
  AwakeningExp                                                                                  Int
  Slot4UnlockLevel                                                                              Int
  Slot5UnlockLevel                                                                              Int
  CollectionEmptyFrameDisplayFlag                                                               Boolean
  sao_hero_log_data                                                                             sao_hero_log_data[]
  sao_static_equipment_list_sao_static_hero_list_DefaultEquipmentId1Tosao_static_equipment_list sao_static_equipment_list? @relation("sao_static_hero_list_DefaultEquipmentId1Tosao_static_equipment_list", fields: [DefaultEquipmentId1], references: [EquipmentId], onDelete: Cascade, map: "sao_static_hero_list_ibfk_1")
  sao_static_equipment_list_sao_static_hero_list_DefaultEquipmentId2Tosao_static_equipment_list sao_static_equipment_list? @relation("sao_static_hero_list_DefaultEquipmentId2Tosao_static_equipment_list", fields: [DefaultEquipmentId2], references: [EquipmentId], onDelete: Cascade, map: "sao_static_hero_list_ibfk_2")
  sao_static_property_sao_static_hero_list_Property1PropertyIdTosao_static_property             sao_static_property        @relation("sao_static_hero_list_Property1PropertyIdTosao_static_property", fields: [Property1PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_hero_list_ibfk_3")
  sao_static_property_sao_static_hero_list_Property2PropertyIdTosao_static_property             sao_static_property        @relation("sao_static_hero_list_Property2PropertyIdTosao_static_property", fields: [Property2PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_hero_list_ibfk_4")
  sao_static_property_sao_static_hero_list_Property3PropertyIdTosao_static_property             sao_static_property        @relation("sao_static_hero_list_Property3PropertyIdTosao_static_property", fields: [Property3PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_hero_list_ibfk_5")
  sao_static_property_sao_static_hero_list_Property4PropertyIdTosao_static_property             sao_static_property        @relation("sao_static_hero_list_Property4PropertyIdTosao_static_property", fields: [Property4PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_hero_list_ibfk_6")

  @@index([DefaultEquipmentId1], map: "DefaultEquipmentId1")
  @@index([DefaultEquipmentId2], map: "DefaultEquipmentId2")
  @@index([Property1PropertyId], map: "Property1PropertyId")
  @@index([Property2PropertyId], map: "Property2PropertyId")
  @@index([Property3PropertyId], map: "Property3PropertyId")
  @@index([Property4PropertyId], map: "Property4PropertyId")
}

model sao_static_item_list {
  ItemId              Int                 @id @default(autoincrement())
  ItemTypeId          Int
  Name                String              @db.VarChar(255)
  Name_en             String?             @db.VarChar(255)
  Rarity              Int
  Value               Int
  PropertyId          BigInt
  PropertyValue1Min   Int
  PropertyValue1Max   Int
  PropertyValue2Min   Int
  PropertyValue2Max   Int
  FlavorText          String              @db.VarChar(255)
  FlavorText_en       String?             @db.VarChar(255)
  SalePrice           Int
  ItemIcon            String              @db.VarChar(255)
  sao_static_property sao_static_property @relation(fields: [PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_item_list_ibfk_1")

  @@index([PropertyId], map: "PropertyId")
}

model sao_static_quest {
  QuestSceneId          BigInt                  @id @default(autoincrement())
  SortNo                Int
  Tutorial              Boolean
  ColRate               Decimal                 @db.Decimal(10, 0)
  LimitDefault          Int
  LimitResurrection     Int
  RewardTableSubId      Int
  PlayerTraceTableSubId Int
  SuccessPlayerExp      Int
  FailedPlayerExp       Int
  PairExpRate           Int
  TrioExpRate           Int
  SingleRewardVp        Int
  PairRewardVp          Int
  TrioRewardVp          Int
  sao_player_ex_bonus   sao_player_ex_bonus[]
  sao_player_quest      sao_player_quest[]
  sao_static_episode    sao_static_episode[]
  sao_static_ex_tower   sao_static_ex_tower[]
  sao_static_side_quest sao_static_side_quest[]
  sao_static_tower      sao_static_tower[]
}

model sao_static_rare_drop_list {
  id              Int      @id @default(autoincrement())
  version         Int?
  questRareDropId Int?
  commonRewardId  Int?
  enabled         Boolean?

  @@unique([version, questRareDropId, commonRewardId], map: "sao_static_rare_drop_list_uk")
}

model sao_static_support_log_list {
  id           Int      @id @default(autoincrement())
  version      Int?
  supportLogId Int?
  charaId      Int?
  name         String?  @db.VarChar(255)
  rarity       Int?
  salePrice    Int?
  skillName    String?  @db.VarChar(255)
  enabled      Boolean?

  @@unique([version, supportLogId], map: "sao_static_support_log_list_uk")
}

model sao_static_title_list {
  id            Int      @id @default(autoincrement())
  version       Int?
  titleId       Int?
  displayName   String?  @db.VarChar(255)
  requirement   Int?
  rank          Int?
  imageFilePath String?  @db.VarChar(255)
  enabled       Boolean?

  @@unique([version, titleId], map: "sao_static_title_list_uk")
}

model schema_versions {
  game    String @id @db.VarChar(4)
  version Int    @default(1)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model wacca_bingo {
  user          Int       @id
  page_number   Int
  page_progress String    @db.LongText
  aime_user     aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_bingo_ibfk_1")

  @@unique([user, page_number], map: "wacca_bingo_uk")
}

model wacca_favorite_song {
  id        Int       @id @default(autoincrement())
  user      Int
  song_id   Int
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_favorite_song_ibfk_1")

  @@unique([user, song_id], map: "wacca_favorite_song_uk")
}

model wacca_friend {
  profile_sender                                     Int
  profile_reciever                                   Int
  is_accepted                                        Boolean?  @default(false)
  aime_user_wacca_friend_profile_senderToaime_user   aime_user @relation("wacca_friend_profile_senderToaime_user", fields: [profile_sender], references: [id], onDelete: Cascade, map: "wacca_friend_ibfk_1")
  aime_user_wacca_friend_profile_recieverToaime_user aime_user @relation("wacca_friend_profile_recieverToaime_user", fields: [profile_reciever], references: [id], onDelete: Cascade, map: "wacca_friend_ibfk_2")

  @@id([profile_sender, profile_reciever])
  @@index([profile_reciever], map: "profile_reciever")
}

model wacca_gate {
  id           Int       @id @default(autoincrement())
  user         Int
  gate_id      Int
  page         Int       @default(0)
  progress     Int       @default(0)
  loops        Int       @default(0)
  last_used    DateTime  @default(now()) @db.Timestamp(0)
  mission_flag Int       @default(0)
  total_points Int       @default(0)
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_gate_ibfk_1")

  @@unique([user, gate_id], map: "wacca_gate_uk")
}

model wacca_item {
  id           Int       @id @default(autoincrement())
  user         Int
  item_id      Int
  type         Int
  acquire_date DateTime  @default(now()) @db.Timestamp(0)
  use_count    Int?      @default(0)
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_item_ibfk_1")

  @@unique([user, item_id, type], map: "wacca_item_uk")
}

model wacca_option {
  id        Int       @id @default(autoincrement())
  user      Int
  opt_id    Int
  value     Int
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_option_ibfk_1")

  @@unique([user, opt_id], map: "wacca_option_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model wacca_profile {
  id                      Int       @id @default(autoincrement())
  user                    Int
  version                 Int?
  username                String    @db.VarChar(8)
  xp                      Int?      @default(0)
  wp                      Int?      @default(0)
  wp_total                Int?      @default(0)
  wp_spent                Int?      @default(0)
  dan_type                Int?      @default(0)
  dan_level               Int?      @default(0)
  title_0                 Int?      @default(0)
  title_1                 Int?      @default(0)
  title_2                 Int?      @default(0)
  rating                  Int?      @default(0)
  vip_expire_time         DateTime? @db.Timestamp(0)
  always_vip              Boolean?  @default(false)
  login_count             Int?      @default(0)
  login_count_consec      Int?      @default(0)
  login_count_days        Int?      @default(0)
  login_count_days_consec Int?      @default(0)
  login_count_today       Int?      @default(0)
  playcount_single        Int?      @default(0)
  playcount_multi_vs      Int?      @default(0)
  playcount_multi_coop    Int?      @default(0)
  playcount_stageup       Int?      @default(0)
  playcount_time_free     Int?      @default(0)
  friend_view_1           Int?
  friend_view_2           Int?
  friend_view_3           Int?
  last_game_ver           String?   @db.VarChar(50)
  last_song_id            Int?      @default(0)
  last_song_difficulty    Int?      @default(0)
  last_folder_order       Int?      @default(0)
  last_folder_id          Int?      @default(0)
  last_song_order         Int?      @default(0)
  last_login_date         DateTime? @default(now()) @db.Timestamp(0)
  gate_tutorial_flags     String?   @db.LongText
  aime_user               aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_profile_ibfk_1")

  @@unique([user, version], map: "wacca_profile_uk")
}

model wacca_score_best {
  id              Int       @id @default(autoincrement())
  user            Int
  song_id         Int?
  chart_id        Int?
  score           Int?
  play_ct         Int?
  clear_ct        Int?
  missless_ct     Int?
  fullcombo_ct    Int?
  allmarv_ct      Int?
  grade_d_ct      Int?
  grade_c_ct      Int?
  grade_b_ct      Int?
  grade_a_ct      Int?
  grade_aa_ct     Int?
  grade_aaa_ct    Int?
  grade_s_ct      Int?
  grade_ss_ct     Int?
  grade_sss_ct    Int?
  grade_master_ct Int?
  grade_sp_ct     Int?
  grade_ssp_ct    Int?
  grade_sssp_ct   Int?
  best_combo      Int?
  lowest_miss_ct  Int?
  rating          Int?
  aime_user       aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_score_best_ibfk_1")

  @@unique([user, song_id, chart_id], map: "wacca_score_uk")
}

model wacca_score_playlog {
  id          Int       @id @default(autoincrement())
  user        Int
  song_id     Int?
  chart_id    Int?
  score       Int?
  clear       Int?
  grade       Int?
  max_combo   Int?
  marv_ct     Int?
  great_ct    Int?
  good_ct     Int?
  miss_ct     Int?
  fast_ct     Int?
  late_ct     Int?
  season      Int?
  date_scored DateTime? @default(now()) @db.Timestamp(0)
  aime_user   aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_score_playlog_ibfk_1")

  @@index([user], map: "user")
}

model wacca_score_stageup {
  id            Int       @id @default(autoincrement())
  user          Int
  version       Int?
  stage_id      Int?
  clear_status  Int?
  clear_song_ct Int?
  song1_score   Int?
  song2_score   Int?
  song3_score   Int?
  play_ct       Int?      @default(1)
  aime_user     aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_score_stageup_ibfk_1")

  @@unique([user, stage_id], map: "wacca_score_stageup_uk")
}

model wacca_song_unlock {
  id                 Int       @id @default(autoincrement())
  user               Int
  song_id            Int
  highest_difficulty Int
  acquire_date       DateTime  @default(now()) @db.Timestamp(0)
  aime_user          aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_song_unlock_ibfk_1")

  @@unique([user, song_id], map: "wacca_song_unlock_uk")
}

model wacca_static_music {
  id            Int     @id @default(autoincrement())
  version       Int
  songId        Int?
  chartId       Int?
  title         String? @db.VarChar(255)
  artist        String? @db.VarChar(255)
  bpm           String? @db.VarChar(255)
  difficulty    Float?  @db.Float
  chartDesigner String? @db.VarChar(255)
  jacketFile    String? @db.VarChar(255)

  @@unique([version, songId, chartId], map: "wacca_static_music_uk")
}

model wacca_ticket {
  id           Int       @id @default(autoincrement())
  user         Int
  ticket_id    Int
  acquire_date DateTime  @default(now()) @db.Timestamp(0)
  expire_date  DateTime? @db.Timestamp(0)
  aime_user    aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_ticket_ibfk_1")

  @@index([user], map: "user")
}

model wacca_trophy {
  id         Int       @id @default(autoincrement())
  user       Int
  trophy_id  Int
  season     Int
  progress   Int       @default(0)
  badge_type Int       @default(0)
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "wacca_trophy_ibfk_1")

  @@unique([user, trophy_id, season], map: "wacca_trophy_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model aime_user_game_locks {
  id         Int       @id @default(autoincrement())
  user       Int
  game       String    @db.VarChar(4)
  expires_at DateTime? @default(dbgenerated("(current_timestamp() + interval 15 minute)")) @db.Timestamp(0)
  extra      String?   @db.LongText
  aime_user  aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "aime_user_game_locks_ibfk_1")

  @@unique([user, game], map: "aime_user_title_locks")
}

model mai2_item_favorite_music {
  id        Int       @id @default(autoincrement())
  user      Int
  musicId   Int
  orderId   Int?
  aime_user aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_favorite_music_ibfk_1")

  @@unique([user, musicId], map: "mai2_item_favorite_music_uk")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model mai2_playlog_2p {
  id                      Int       @id @default(autoincrement())
  user                    Int
  userId1                 Int?
  userId2                 Int?
  userName1               String?   @db.VarChar(25)
  userName2               String?   @db.VarChar(25)
  regionId                Int?
  placeId                 Int?
  user2pPlaylogDetailList String?   @db.LongText
  aime_user               aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_playlog_2p_ibfk_1")

  @@index([user], map: "user")
}

model mai2_user_rival {
  id                                         Int       @id @default(autoincrement())
  user                                       Int
  rival                                      Int
  show                                       Boolean   @default(false)
  aime_user_mai2_user_rival_rivalToaime_user aime_user @relation("mai2_user_rival_rivalToaime_user", fields: [rival], references: [id], onDelete: Cascade, map: "mai2_user_rival_ibfk_1")
  aime_user_mai2_user_rival_userToaime_user  aime_user @relation("mai2_user_rival_userToaime_user", fields: [user], references: [id], onDelete: Cascade, map: "mai2_user_rival_ibfk_2")

  @@unique([user, rival], map: "mai2_user_rival_uk")
  @@index([rival], map: "rival")
}

model mai2_item_present {
  id        BigInt     @id @default(autoincrement())
  version   Int?
  user      Int?
  itemKind  Int
  itemId    Int
  stock     Int        @default(1)
  startDate DateTime?  @db.Timestamp(0)
  endDate   DateTime?  @db.Timestamp(0)
  aime_user aime_user? @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_item_present_ibfk_1")

  @@unique([version, user, itemKind, itemId], map: "mai2_item_present_uk")
  @@index([user], map: "user")
}

model sao_player_beginner_mission {
  id                   BigInt    @id @default(autoincrement())
  user                 Int       @unique(map: "user")
  beginner_mission_id  Int
  condition_id         Int
  is_seat              Boolean   @default(false)
  achievement_num      Int
  complete_flag        Boolean   @default(false)
  complete_date        DateTime? @db.Timestamp(0)
  reward_received_flag Boolean   @default(false)
  reward_received_date DateTime? @db.Timestamp(0)
  aime_user            aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_player_beginner_mission_ibfk_1")

  @@unique([user, condition_id], map: "sao_player_beginner_mission_uk")
}

model sao_player_ex_bonus {
  id                  BigInt              @id @default(autoincrement())
  user                Int
  quest_scene_id      BigInt
  ex_bonus_table_id   BigInt
  quest_clear_flag    Boolean             @default(false)
  sao_static_ex_bonus sao_static_ex_bonus @relation(fields: [ex_bonus_table_id], references: [ExBonusTableId], onDelete: Cascade, map: "sao_player_ex_bonus_ibfk_1")
  sao_static_quest    sao_static_quest    @relation(fields: [quest_scene_id], references: [QuestSceneId], onDelete: Cascade, map: "sao_player_ex_bonus_ibfk_2")
  aime_user           aime_user           @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_player_ex_bonus_ibfk_3")

  @@unique([user, quest_scene_id, ex_bonus_table_id], map: "sao_player_ex_bonus_uk")
  @@index([ex_bonus_table_id], map: "ex_bonus_table_id")
  @@index([quest_scene_id], map: "quest_scene_id")
}

model sao_player_hero_card {
  id                BigInt            @id @default(autoincrement())
  user              Int
  user_hero_id      Int
  holographic_flag  Boolean           @default(false)
  serial            String?           @unique(map: "serial") @db.VarChar(20)
  aime_user         aime_user         @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_player_hero_card_ibfk_1")
  sao_hero_log_data sao_hero_log_data @relation(fields: [user_hero_id], references: [id], onDelete: Cascade, map: "sao_player_hero_card_ibfk_2")

  @@index([user], map: "user")
  @@index([user_hero_id], map: "user_hero_id")
}

model sao_player_resource_card {
  id                 BigInt    @id @default(autoincrement())
  user               Int
  common_reward_type Int
  common_reward_id   Int
  holographic_flag   Boolean   @default(false)
  serial             String?   @unique(map: "serial") @db.VarChar(20)
  aime_user          aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_player_resource_card_ibfk_1")

  @@index([user], map: "user")
}

model sao_player_tutorial {
  id            BigInt    @id @default(autoincrement())
  user          Int
  tutorial_byte Int
  aime_user     aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "sao_player_tutorial_ibfk_1")

  @@unique([user, tutorial_byte], map: "sao_player_tutorial_uk")
}

model sao_static_episode {
  EpisodeId         BigInt            @id @default(autoincrement())
  EpisodeChapterId  Int
  ReleaseEpisodeId  Int
  Title             String            @db.VarChar(255)
  CommentSummary    String            @db.VarChar(255)
  ExBonusTableSubId Int
  QuestSceneId      BigInt?
  sao_static_quest  sao_static_quest? @relation(fields: [QuestSceneId], references: [QuestSceneId], onDelete: Cascade, map: "sao_static_episode_ibfk_1")

  @@index([QuestSceneId], map: "QuestSceneId")
}

model sao_static_ex_bonus {
  ExBonusTableId                                                                   BigInt                @id @default(autoincrement())
  ExBonusTableSubId                                                                Int
  ExBonusConditionId                                                               Int
  ConditionValue1                                                                  Int
  ConditionValue2                                                                  Int
  CommonRewardType                                                                 Int
  CommonRewardId                                                                   Int
  CommonRewardNum                                                                  Int
  Strength                                                                         Int
  Property1PropertyId                                                              BigInt
  Property1Value1                                                                  Int
  Property1Value2                                                                  Int
  Property2PropertyId                                                              BigInt
  Property2Value1                                                                  Int
  Property2Value2                                                                  Int
  Property3PropertyId                                                              BigInt
  Property3Value1                                                                  Int
  Property3Value2                                                                  Int
  Property4PropertyId                                                              BigInt
  Property4Value1                                                                  Int
  Property4Value2                                                                  Int
  sao_player_ex_bonus                                                              sao_player_ex_bonus[]
  sao_static_property_sao_static_ex_bonus_Property1PropertyIdTosao_static_property sao_static_property   @relation("sao_static_ex_bonus_Property1PropertyIdTosao_static_property", fields: [Property1PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_ex_bonus_ibfk_1")
  sao_static_property_sao_static_ex_bonus_Property2PropertyIdTosao_static_property sao_static_property   @relation("sao_static_ex_bonus_Property2PropertyIdTosao_static_property", fields: [Property2PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_ex_bonus_ibfk_2")
  sao_static_property_sao_static_ex_bonus_Property3PropertyIdTosao_static_property sao_static_property   @relation("sao_static_ex_bonus_Property3PropertyIdTosao_static_property", fields: [Property3PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_ex_bonus_ibfk_3")
  sao_static_property_sao_static_ex_bonus_Property4PropertyIdTosao_static_property sao_static_property   @relation("sao_static_ex_bonus_Property4PropertyIdTosao_static_property", fields: [Property4PropertyId], references: [PropertyId], onDelete: Cascade, map: "sao_static_ex_bonus_ibfk_4")

  @@index([Property1PropertyId], map: "Property1PropertyId")
  @@index([Property2PropertyId], map: "Property2PropertyId")
  @@index([Property3PropertyId], map: "Property3PropertyId")
  @@index([Property4PropertyId], map: "Property4PropertyId")
}

model sao_static_ex_tower {
  ExTowerQuestId        BigInt           @id @default(autoincrement())
  ExTowerId             Int
  ReleaseExTowerQuestId Int
  Title                 String           @db.VarChar(255)
  Title_en              String?          @db.VarChar(255)
  ExBonusTableSubId     Int
  QuestSceneId          BigInt
  sao_static_quest      sao_static_quest @relation(fields: [QuestSceneId], references: [QuestSceneId], onDelete: Cascade, map: "sao_static_ex_tower_ibfk_1")

  @@index([QuestSceneId], map: "QuestSceneId")
}

model sao_static_property {
  PropertyId                                                                                   BigInt                      @id @default(autoincrement())
  PropertyTargetType                                                                           Int
  PropertyName                                                                                 String                      @db.VarChar(255)
  PropertyName_en                                                                              String?                     @db.VarChar(255)
  PropertyNameFormat                                                                           String                      @db.VarChar(255)
  PropertyNameFormat_en                                                                        String?                     @db.VarChar(255)
  PropertyTypeId                                                                               Int
  Value1Min                                                                                    Int
  Value1Max                                                                                    Int
  Value2Min                                                                                    Int
  Value2Max                                                                                    Int
  sao_equipment_data_sao_equipment_data_property2_property_idTosao_static_property             sao_equipment_data[]        @relation("sao_equipment_data_property2_property_idTosao_static_property")
  sao_equipment_data_sao_equipment_data_property4_property_idTosao_static_property             sao_equipment_data[]        @relation("sao_equipment_data_property4_property_idTosao_static_property")
  sao_equipment_data_sao_equipment_data_property3_property_idTosao_static_property             sao_equipment_data[]        @relation("sao_equipment_data_property3_property_idTosao_static_property")
  sao_equipment_data_sao_equipment_data_property1_property_idTosao_static_property             sao_equipment_data[]        @relation("sao_equipment_data_property1_property_idTosao_static_property")
  sao_hero_log_data_sao_hero_log_data_property1_property_idTosao_static_property               sao_hero_log_data[]         @relation("sao_hero_log_data_property1_property_idTosao_static_property")
  sao_hero_log_data_sao_hero_log_data_property2_property_idTosao_static_property               sao_hero_log_data[]         @relation("sao_hero_log_data_property2_property_idTosao_static_property")
  sao_hero_log_data_sao_hero_log_data_property4_property_idTosao_static_property               sao_hero_log_data[]         @relation("sao_hero_log_data_property4_property_idTosao_static_property")
  sao_hero_log_data_sao_hero_log_data_property3_property_idTosao_static_property               sao_hero_log_data[]         @relation("sao_hero_log_data_property3_property_idTosao_static_property")
  sao_static_equipment_list_sao_static_equipment_list_Property1PropertyIdTosao_static_property sao_static_equipment_list[] @relation("sao_static_equipment_list_Property1PropertyIdTosao_static_property")
  sao_static_equipment_list_sao_static_equipment_list_Property2PropertyIdTosao_static_property sao_static_equipment_list[] @relation("sao_static_equipment_list_Property2PropertyIdTosao_static_property")
  sao_static_equipment_list_sao_static_equipment_list_Property3PropertyIdTosao_static_property sao_static_equipment_list[] @relation("sao_static_equipment_list_Property3PropertyIdTosao_static_property")
  sao_static_equipment_list_sao_static_equipment_list_Property4PropertyIdTosao_static_property sao_static_equipment_list[] @relation("sao_static_equipment_list_Property4PropertyIdTosao_static_property")
  sao_static_ex_bonus_sao_static_ex_bonus_Property1PropertyIdTosao_static_property             sao_static_ex_bonus[]       @relation("sao_static_ex_bonus_Property1PropertyIdTosao_static_property")
  sao_static_ex_bonus_sao_static_ex_bonus_Property2PropertyIdTosao_static_property             sao_static_ex_bonus[]       @relation("sao_static_ex_bonus_Property2PropertyIdTosao_static_property")
  sao_static_ex_bonus_sao_static_ex_bonus_Property3PropertyIdTosao_static_property             sao_static_ex_bonus[]       @relation("sao_static_ex_bonus_Property3PropertyIdTosao_static_property")
  sao_static_ex_bonus_sao_static_ex_bonus_Property4PropertyIdTosao_static_property             sao_static_ex_bonus[]       @relation("sao_static_ex_bonus_Property4PropertyIdTosao_static_property")
  sao_static_hero_list_sao_static_hero_list_Property1PropertyIdTosao_static_property           sao_static_hero_list[]      @relation("sao_static_hero_list_Property1PropertyIdTosao_static_property")
  sao_static_hero_list_sao_static_hero_list_Property2PropertyIdTosao_static_property           sao_static_hero_list[]      @relation("sao_static_hero_list_Property2PropertyIdTosao_static_property")
  sao_static_hero_list_sao_static_hero_list_Property3PropertyIdTosao_static_property           sao_static_hero_list[]      @relation("sao_static_hero_list_Property3PropertyIdTosao_static_property")
  sao_static_hero_list_sao_static_hero_list_Property4PropertyIdTosao_static_property           sao_static_hero_list[]      @relation("sao_static_hero_list_Property4PropertyIdTosao_static_property")
  sao_static_item_list                                                                         sao_static_item_list[]
}

model sao_static_reward {
  RewardTableId        BigInt  @id @default(autoincrement())
  RewardTableSubId     Int
  UnanalyzedLogGradeId Int
  CommonRewardType     Int
  CommonRewardId       Int
  CommonRewardNum      Int
  StrengthMin          Int
  StrengthMax          Int
  PropertyTableSubId   Int
  QuestInfoDisplayFlag Boolean
  Rate                 Int
}

model sao_static_side_quest {
  SideQuestId       BigInt           @id @unique(map: "SideQuestId") @default(autoincrement())
  DisplayName       String           @db.VarChar(255)
  DisplayName_en    String?          @db.VarChar(255)
  EpisodeNum        Int
  ExBonusTableSubId Int
  QuestSceneId      BigInt
  sao_static_quest  sao_static_quest @relation(fields: [QuestSceneId], references: [QuestSceneId], onDelete: Cascade, map: "sao_static_side_quest_ibfk_1")

  @@index([QuestSceneId], map: "QuestSceneId")
}

model sao_static_skill {
  SkillId                                                                    BigInt                   @id @default(autoincrement())
  WeaponTypeId                                                               Int
  Name                                                                       String                   @db.VarChar(255)
  Name_en                                                                    String?                  @db.VarChar(255)
  Attack                                                                     Boolean
  Passive                                                                    Boolean
  Pet                                                                        Boolean
  Level                                                                      Int
  SkillCondition                                                             Int
  CoolTime                                                                   Int
  SkillIcon                                                                  String                   @db.VarChar(255)
  FriendSkillIcon                                                            String                   @db.VarChar(255)
  InfoText                                                                   String                   @db.VarChar(255)
  InfoText_en                                                                String?                  @db.VarChar(255)
  sao_hero_log_data_sao_hero_log_data_skill_slot1_skill_idTosao_static_skill sao_hero_log_data[]      @relation("sao_hero_log_data_skill_slot1_skill_idTosao_static_skill")
  sao_hero_log_data_sao_hero_log_data_skill_slot5_skill_idTosao_static_skill sao_hero_log_data[]      @relation("sao_hero_log_data_skill_slot5_skill_idTosao_static_skill")
  sao_hero_log_data_sao_hero_log_data_skill_slot2_skill_idTosao_static_skill sao_hero_log_data[]      @relation("sao_hero_log_data_skill_slot2_skill_idTosao_static_skill")
  sao_hero_log_data_sao_hero_log_data_skill_slot3_skill_idTosao_static_skill sao_hero_log_data[]      @relation("sao_hero_log_data_skill_slot3_skill_idTosao_static_skill")
  sao_hero_log_data_sao_hero_log_data_skill_slot4_skill_idTosao_static_skill sao_hero_log_data[]      @relation("sao_hero_log_data_skill_slot4_skill_idTosao_static_skill")
  sao_static_skill_table                                                     sao_static_skill_table[]
}

model sao_static_skill_table {
  SkillTableId     BigInt           @id @default(autoincrement())
  SkillId          BigInt
  SkillTableSubId  Int
  LevelObtained    Int
  AwakeningId      Int
  sao_static_skill sao_static_skill @relation(fields: [SkillId], references: [SkillId], onDelete: Cascade, map: "sao_static_skill_table_ibfk_1")

  @@index([SkillId], map: "SkillId")
}

model sao_static_tower {
  TowerId           BigInt           @id @default(autoincrement())
  ReleaseTowerId    Int
  ExBonusTableSubId Int
  QuestSceneId      BigInt
  sao_static_quest  sao_static_quest @relation(fields: [QuestSceneId], references: [QuestSceneId], onDelete: Cascade, map: "sao_static_tower_ibfk_1")

  @@index([QuestSceneId], map: "QuestSceneId")
}

model sao_static_trace_table {
  PlayerTraceTableId    BigInt @id @default(autoincrement())
  PlayerTraceTableSubId Int
  CommonRewardType      Int
  CommonRewardId        Int
  CommonRewardNum       Int
  Rate                  Int
}

model chuni_static_avatar {
  id                Int     @id @default(autoincrement())
  version           Int
  avatarAccessoryId Int?
  name              String? @db.VarChar(255)
  category          Int?
  iconPath          String? @db.VarChar(255)
  texturePath       String? @db.VarChar(255)

  @@unique([version, avatarAccessoryId], map: "chuni_static_avatar_uk")
}

model mai2_user_intimate {
  id                    Int       @id @default(autoincrement())
  user                  Int
  partnerId             Int
  intimateLevel         Int
  intimateCountRewarded Int
  aime_user             aime_user @relation(fields: [user], references: [id], onDelete: Cascade, map: "mai2_user_intimate_ibfk_1")

  @@unique([user, partnerId], map: "mai2_user_intimate_uk")
}
